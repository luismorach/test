{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ComunicatorComponetsService {\n  constructor(http) {\n    this.http = http;\n    this.listData$ = new BehaviorSubject([]);\n    this.state$ = new BehaviorSubject(true);\n    this.titleComponent$ = new BehaviorSubject([]);\n    this.apiURL = 'http://localhost:3000/registers';\n  }\n  setshowHideNavBar(state) {\n    this.state$.next(state);\n  }\n  getShowHideNavBar() {\n    return this.state$.asObservable();\n  }\n  setTitleComponent(title) {\n    this.titleComponent$.next(title);\n  }\n  getTitleComponent() {\n    return this.titleComponent$.asObservable();\n  }\n  setData(data) {\n    this.listData$.next(data);\n  }\n  getData() {\n    return this.listData$.asObservable();\n  }\n  getRegisters() {\n    return this.http.get(this.apiURL);\n  }\n  getRegister(id_register) {\n    return this.http.get(this.apiURL + '/' + id_register);\n  }\n  setRegister(register) {\n    //return this.http.post<any>(this.apiURL,register)\n    return this.listData$;\n  }\n  updateRegister(id_register, register) {\n    return this.http.put(this.apiURL + '/' + id_register, register);\n  }\n  deleteRegister(id_register) {\n    return this.http.delete(this.apiURL + '/' + id_register);\n  }\n}\nComunicatorComponetsService.ɵfac = function ComunicatorComponetsService_Factory(t) {\n  return new (t || ComunicatorComponetsService)(i0.ɵɵinject(i1.HttpClient));\n};\nComunicatorComponetsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ComunicatorComponetsService,\n  factory: ComunicatorComponetsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAA6B,MAAM;;;AAK3D,OAAM,MAAOC,2BAA2B;EAMtCC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IALhB,cAAS,GAAyB,IAAIH,eAAe,CAAQ,EAAE,CAAC;IAChE,WAAM,GAA6B,IAAIA,eAAe,CAAU,IAAI,CAAC;IACrE,oBAAe,GAA8B,IAAIA,eAAe,CAAW,EAAE,CAAC;IAC9E,WAAM,GAAC,iCAAiC;EAET;EAEhCI,iBAAiB,CAACC,KAAc;IACrC,IAAI,CAACC,MAAM,CAACC,IAAI,CAACF,KAAK,CAAC;EACzB;EAEOG,iBAAiB;IACtB,OAAO,IAAI,CAACF,MAAM,CAACG,YAAY,EAAE;EACnC;EAEOC,iBAAiB,CAACC,KAAS;IAChC,IAAI,CAACC,eAAe,CAACL,IAAI,CAACI,KAAK,CAAC;EAClC;EACOE,iBAAiB;IACtB,OAAO,IAAI,CAACD,eAAe,CAACH,YAAY,EAAE;EAC5C;EAEOK,OAAO,CAACC,IAAQ;IACrB,IAAI,CAACC,SAAS,CAACT,IAAI,CAACQ,IAAI,CAAC;EAC3B;EACOE,OAAO;IACZ,OAAO,IAAI,CAACD,SAAS,CAACP,YAAY,EAAE;EACtC;EAEOS,YAAY;IACjB,OAAO,IAAI,CAACf,IAAI,CAACgB,GAAG,CAAC,IAAI,CAACC,MAAM,CAAC;EACnC;EACOC,WAAW,CAACC,WAAkB;IACnC,OAAO,IAAI,CAACnB,IAAI,CAACgB,GAAG,CAAC,IAAI,CAACC,MAAM,GAAC,GAAG,GAACE,WAAW,CAAC;EACnD;EACOC,WAAW,CAACC,QAAY;IAC9B;IACA,OAAO,IAAI,CAACR,SAAS;EACtB;EACOS,cAAc,CAACH,WAAkB,EAACE,QAAY;IACnD,OAAO,IAAI,CAACrB,IAAI,CAACuB,GAAG,CAAM,IAAI,CAACN,MAAM,GAAC,GAAG,GAACE,WAAW,EAACE,QAAQ,CAAC;EACjE;EACOG,cAAc,CAACL,WAAkB;IACtC,OAAO,IAAI,CAACnB,IAAI,CAACyB,MAAM,CAAC,IAAI,CAACR,MAAM,GAAC,GAAG,GAACE,WAAW,CAAC;EACrD;;AA7CUrB,2BAA2B;mBAA3BA,2BAA2B;AAAA;AAA3BA,2BAA2B;SAA3BA,2BAA2B;EAAA4B,SAA3B5B,2BAA2B;EAAA6B,YAF1B;AAAM","names":["BehaviorSubject","ComunicatorComponetsService","constructor","http","setshowHideNavBar","state","state$","next","getShowHideNavBar","asObservable","setTitleComponent","title","titleComponent$","getTitleComponent","setData","data","listData$","getData","getRegisters","get","apiURL","getRegister","id_register","setRegister","register","updateRegister","put","deleteRegister","delete","factory","providedIn"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/inventary-system/client/src/app/services/comunicator/comunicator-componets.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComunicatorComponetsService {\n  private listData$: BehaviorSubject<any[]>=new BehaviorSubject<any[]>([]);\n  private state$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n  private titleComponent$: BehaviorSubject<string[]> = new BehaviorSubject<string[]>([]);\n  private apiURL='http://localhost:3000/registers';\n\n  constructor(private http:HttpClient) { }\n\n  public setshowHideNavBar(state: boolean) {\n    this.state$.next(state);\n  }\n\n  public getShowHideNavBar(): Observable<boolean> {\n    return this.state$.asObservable();\n  }\n\n  public setTitleComponent(title:any){\n    this.titleComponent$.next(title);\n  }\n  public getTitleComponent():Observable<string[]>{\n    return this.titleComponent$.asObservable();\n  }\n  \n  public setData(data:any){\n    this.listData$.next(data)\n  }\n  public getData(){\n    return this.listData$.asObservable();\n  }\n  \n  public getRegisters():Observable<any>{\n    return this.http.get(this.apiURL);\n  }\n  public getRegister(id_register:number):Observable<any>{\n    return this.http.get(this.apiURL+'/'+id_register);\n  }\n  public setRegister(register:any):Observable<any>{\n   //return this.http.post<any>(this.apiURL,register)\n   return this.listData$\n  }\n  public updateRegister(id_register:number,register:any):Observable<any>{\n    return this.http.put<any>(this.apiURL+'/'+id_register,register)\n  }\n  public deleteRegister(id_register:number):Observable<any>{\n    return this.http.delete(this.apiURL+'/'+id_register)\n   }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}