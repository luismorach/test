{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { isBase64 } from './utils/is-base64';\n/**\r\n * Class that contains the essencial for the document definition\r\n */\nvar DocumentDefinition = /** @class */function () {\n  function DocumentDefinition() {\n    /**\r\n     * It defines the pdf definition\r\n     */\n    this.definition = {\n      content: []\n    };\n    if (DocumentDefinition.usedFont) {\n      this.defaultStyle(DocumentDefinition.usedFont);\n    }\n  }\n  /**\r\n   * Sets the font that will be used to generate a PDF\r\n   * @param fontName The font type configuration name\r\n   */\n  DocumentDefinition.useFont = function (fontName) {\n    DocumentDefinition.usedFont = {\n      font: fontName\n    };\n  };\n  /**\r\n   * It adds content to the PDF body\r\n   * @param content any content\r\n   */\n  DocumentDefinition.prototype.add = function (content) {\n    this.definition.content.push(content);\n  };\n  /**\r\n   * Preload images setting a name to each images\r\n   *\r\n   * @example\r\n   * { picture1: 'data:image/jpeg;base64...' } or { picture1: await new Img('/path/image.png').build() }\r\n   *\r\n   * @param imgs Dictionary of default images\r\n   */\n  DocumentDefinition.prototype.images = function (imgs) {\n    var newImgs = {};\n    for (var img in imgs) {\n      if (typeof imgs[img] === 'string' && isBase64(imgs[img])) {\n        newImgs[img] = imgs[img];\n        // it's probably that the first condition is not passed for the regex condition, but it's a string yet\n      } else if (typeof imgs[img] !== 'string') {\n        newImgs[img] = imgs[img].image;\n      }\n    }\n    this.definition.images = newImgs;\n  };\n  /**\r\n   * Preload styles setting a name to each custom styles\r\n   *\r\n   * @example\r\n   * { style1: { bold: true, fontSize: 15 } }\r\n   *\r\n   * @param styles Dictionary of default styles\r\n   */\n  DocumentDefinition.prototype.styles = function (styles) {\n    this.definition.styles = styles;\n  };\n  /**\r\n   * Preload styles setting name to each custom style that is applied to whole PDF.\r\n   * Some styles won't work\r\n   *\r\n   * @example\r\n   * { style1: { bold: true, fontSize: 15 } }\r\n   *\r\n   * @param styles Dictionary of default styles\r\n   */\n  DocumentDefinition.prototype.defaultStyle = function (styles) {\n    this.definition.defaultStyle = __assign(__assign({}, this.definition.defaultStyle || {}), styles);\n  };\n  /**\r\n   * Set a header definition\r\n   * @param header Data that is applied as header\r\n   */\n  DocumentDefinition.prototype.header = function (header) {\n    this.definition.header = header;\n  };\n  /**\r\n   * Set a footer definition\r\n   * @param footer Data that is applied as footer\r\n   */\n  DocumentDefinition.prototype.footer = function (footer) {\n    this.definition.footer = footer;\n  };\n  /**\r\n   * Set a background layer definition\r\n   * @param background Data that is applied as background\r\n   */\n  DocumentDefinition.prototype.background = function (background) {\n    this.definition.background = background;\n  };\n  /**\r\n   * Set the page size\r\n   * @param size The page size\r\n   */\n  DocumentDefinition.prototype.pageSize = function (size) {\n    this.definition.pageSize = size;\n  };\n  /**\r\n   * Set the page margin\r\n   * @param margin The page margin\r\n   */\n  DocumentDefinition.prototype.pageMargins = function (margin) {\n    this.definition.pageMargins = margin;\n  };\n  /**\r\n   * Set the page orientation\r\n   * @param orientation the orientation\r\n   */\n  DocumentDefinition.prototype.pageOrientation = function (orientation) {\n    this.definition.pageOrientation = orientation;\n  };\n  /**\r\n   * Break the page before the condition defined\r\n   * @param breakBefore Function that defines the break of the page\r\n   */\n  DocumentDefinition.prototype.pageBreakBefore = function (breakBefore) {\n    this.definition.pageBreakBefore = breakBefore;\n  };\n  /**\r\n   * Set metadata to the document, you can set a custom metadata\r\n   * @param info The metadata\r\n   */\n  DocumentDefinition.prototype.info = function (info) {\n    this.definition.info = info;\n  };\n  /**\r\n   * It defines if use compress\r\n   * @param compress\r\n   */\n  DocumentDefinition.prototype.compress = function (compress) {\n    this.definition.compress = compress;\n  };\n  /**\r\n   * Set a watermark\r\n  */\n  DocumentDefinition.prototype.watermark = function (watermark) {\n    this.definition.watermark = watermark;\n  };\n  /**\r\n   * Set a raw content\r\n  */\n  DocumentDefinition.prototype.rawContent = function (content) {\n    this.definition.content = content;\n  };\n  /**\r\n   * Sets a password to the PDF to encrypt it and when an user wants to open the document\r\n   * a popup will be shown to type the password\r\n   * @param password\r\n   */\n  DocumentDefinition.prototype.userPassword = function (password) {\n    this.definition.userPassword = password;\n  };\n  /**\r\n   * Sets access privileges providing an owner password and the privileges setting\r\n   * @param password The password\r\n   * @param permissions The permission setting\r\n   */\n  DocumentDefinition.prototype.permissions = function (password, permissions) {\n    this.definition.ownerPassword = password;\n    this.definition.permissions = permissions;\n  };\n  /**\r\n   * Gets the document definition\r\n   */\n  DocumentDefinition.prototype.getDefinition = function () {\n    return this.definition;\n  };\n  return DocumentDefinition;\n}();\nexport { DocumentDefinition };","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","isBase64","DocumentDefinition","definition","content","usedFont","defaultStyle","useFont","fontName","font","add","push","images","imgs","newImgs","img","image","styles","header","footer","background","pageSize","size","pageMargins","margin","pageOrientation","orientation","pageBreakBefore","breakBefore","info","compress","watermark","rawContent","userPassword","password","permissions","ownerPassword","getDefinition"],"sources":["/media/luis/Nuevo vol/systems vs code/test/client/node_modules/pdfmake-wrapper/lib/document-definition.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport { isBase64 } from './utils/is-base64';\r\n/**\r\n * Class that contains the essencial for the document definition\r\n */\r\nvar DocumentDefinition = /** @class */ (function () {\r\n    function DocumentDefinition() {\r\n        /**\r\n         * It defines the pdf definition\r\n         */\r\n        this.definition = {\r\n            content: []\r\n        };\r\n        if (DocumentDefinition.usedFont) {\r\n            this.defaultStyle(DocumentDefinition.usedFont);\r\n        }\r\n    }\r\n    /**\r\n     * Sets the font that will be used to generate a PDF\r\n     * @param fontName The font type configuration name\r\n     */\r\n    DocumentDefinition.useFont = function (fontName) {\r\n        DocumentDefinition.usedFont = { font: fontName };\r\n    };\r\n    /**\r\n     * It adds content to the PDF body\r\n     * @param content any content\r\n     */\r\n    DocumentDefinition.prototype.add = function (content) {\r\n        this.definition.content.push(content);\r\n    };\r\n    /**\r\n     * Preload images setting a name to each images\r\n     *\r\n     * @example\r\n     * { picture1: 'data:image/jpeg;base64...' } or { picture1: await new Img('/path/image.png').build() }\r\n     *\r\n     * @param imgs Dictionary of default images\r\n     */\r\n    DocumentDefinition.prototype.images = function (imgs) {\r\n        var newImgs = {};\r\n        for (var img in imgs) {\r\n            if (typeof imgs[img] === 'string' && isBase64(imgs[img])) {\r\n                newImgs[img] = imgs[img];\r\n                // it's probably that the first condition is not passed for the regex condition, but it's a string yet\r\n            }\r\n            else if (typeof imgs[img] !== 'string') {\r\n                newImgs[img] = imgs[img].image;\r\n            }\r\n        }\r\n        this.definition.images = newImgs;\r\n    };\r\n    /**\r\n     * Preload styles setting a name to each custom styles\r\n     *\r\n     * @example\r\n     * { style1: { bold: true, fontSize: 15 } }\r\n     *\r\n     * @param styles Dictionary of default styles\r\n     */\r\n    DocumentDefinition.prototype.styles = function (styles) {\r\n        this.definition.styles = styles;\r\n    };\r\n    /**\r\n     * Preload styles setting name to each custom style that is applied to whole PDF.\r\n     * Some styles won't work\r\n     *\r\n     * @example\r\n     * { style1: { bold: true, fontSize: 15 } }\r\n     *\r\n     * @param styles Dictionary of default styles\r\n     */\r\n    DocumentDefinition.prototype.defaultStyle = function (styles) {\r\n        this.definition.defaultStyle = __assign(__assign({}, (this.definition.defaultStyle || {})), styles);\r\n    };\r\n    /**\r\n     * Set a header definition\r\n     * @param header Data that is applied as header\r\n     */\r\n    DocumentDefinition.prototype.header = function (header) {\r\n        this.definition.header = header;\r\n    };\r\n    /**\r\n     * Set a footer definition\r\n     * @param footer Data that is applied as footer\r\n     */\r\n    DocumentDefinition.prototype.footer = function (footer) {\r\n        this.definition.footer = footer;\r\n    };\r\n    /**\r\n     * Set a background layer definition\r\n     * @param background Data that is applied as background\r\n     */\r\n    DocumentDefinition.prototype.background = function (background) {\r\n        this.definition.background = background;\r\n    };\r\n    /**\r\n     * Set the page size\r\n     * @param size The page size\r\n     */\r\n    DocumentDefinition.prototype.pageSize = function (size) {\r\n        this.definition.pageSize = size;\r\n    };\r\n    /**\r\n     * Set the page margin\r\n     * @param margin The page margin\r\n     */\r\n    DocumentDefinition.prototype.pageMargins = function (margin) {\r\n        this.definition.pageMargins = margin;\r\n    };\r\n    /**\r\n     * Set the page orientation\r\n     * @param orientation the orientation\r\n     */\r\n    DocumentDefinition.prototype.pageOrientation = function (orientation) {\r\n        this.definition.pageOrientation = orientation;\r\n    };\r\n    /**\r\n     * Break the page before the condition defined\r\n     * @param breakBefore Function that defines the break of the page\r\n     */\r\n    DocumentDefinition.prototype.pageBreakBefore = function (breakBefore) {\r\n        this.definition.pageBreakBefore = breakBefore;\r\n    };\r\n    /**\r\n     * Set metadata to the document, you can set a custom metadata\r\n     * @param info The metadata\r\n     */\r\n    DocumentDefinition.prototype.info = function (info) {\r\n        this.definition.info = info;\r\n    };\r\n    /**\r\n     * It defines if use compress\r\n     * @param compress\r\n     */\r\n    DocumentDefinition.prototype.compress = function (compress) {\r\n        this.definition.compress = compress;\r\n    };\r\n    /**\r\n     * Set a watermark\r\n    */\r\n    DocumentDefinition.prototype.watermark = function (watermark) {\r\n        this.definition.watermark = watermark;\r\n    };\r\n    /**\r\n     * Set a raw content\r\n    */\r\n    DocumentDefinition.prototype.rawContent = function (content) {\r\n        this.definition.content = content;\r\n    };\r\n    /**\r\n     * Sets a password to the PDF to encrypt it and when an user wants to open the document\r\n     * a popup will be shown to type the password\r\n     * @param password\r\n     */\r\n    DocumentDefinition.prototype.userPassword = function (password) {\r\n        this.definition.userPassword = password;\r\n    };\r\n    /**\r\n     * Sets access privileges providing an owner password and the privileges setting\r\n     * @param password The password\r\n     * @param permissions The permission setting\r\n     */\r\n    DocumentDefinition.prototype.permissions = function (password, permissions) {\r\n        this.definition.ownerPassword = password;\r\n        this.definition.permissions = permissions;\r\n    };\r\n    /**\r\n     * Gets the document definition\r\n     */\r\n    DocumentDefinition.prototype.getDefinition = function () {\r\n        return this.definition;\r\n    };\r\n    return DocumentDefinition;\r\n}());\r\nexport { DocumentDefinition };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}