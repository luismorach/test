{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { DinamicTable } from 'src/app/utils/DinamicTable';\nlet KardexGeneralComponent = class KardexGeneralComponent extends DinamicTable {\n  constructor(fb, renderer, comunicatorSvc, routes, kardexSvc, coinsSvc) {\n    super(renderer);\n    this.fb = fb;\n    this.renderer = renderer;\n    this.comunicatorSvc = comunicatorSvc;\n    this.routes = routes;\n    this.kardexSvc = kardexSvc;\n    this.coinsSvc = coinsSvc;\n    this.result = [];\n    this.kardex = [];\n    this.currentData = [];\n    this.products = [];\n  }\n  ngOnInit() {\n    let title = [];\n    let ruta;\n    setTimeout(() => {\n      /* Obtengo la ruta actual y la transformo para obtener el titulo del componente*/\n      ruta = this.routes.url.slice(this.routes.url.slice(1).indexOf('/') + 2);\n      title.push(decodeURI(ruta).toUpperCase()); //a単ado el titulo al array\n      title.push(\"fas fa-pallet fa-fw\"); //aa単ado el icono del titulo al array\n      this.comunicatorSvc.setTitleComponent(title);\n    });\n    this.kardexSvc.getKardex().subscribe({\n      next: res => {\n        let aux = res;\n        console.log(res);\n        this.kardex = aux;\n        this.currentData = aux;\n        this.products = aux;\n      },\n      complete: () => {\n        this.createPages(this.tableSearch, this.currentData, this.kardex);\n        this.comunicatorSvc.getData().subscribe(res => this.currentData = res);\n      }\n    });\n    this.coinsSvc.getMainCoin().subscribe(res => {\n      if (res instanceof Array) this.mainCoin = res[0];\n    });\n    this.tableSearch = new FormGroup({\n      search: new FormControl(),\n      numberRows: new FormControl('10')\n    });\n  }\n  ngOnDestroy() {\n    this.data$?.unsubscribe();\n  }\n};\n__decorate([ViewChild('pagination', {\n  static: false\n})], KardexGeneralComponent.prototype, \"pagination\", void 0);\n__decorate([ViewChild('next', {\n  static: false\n})], KardexGeneralComponent.prototype, \"next\", void 0);\n__decorate([ViewChild('dataTables_info', {\n  static: false\n})], KardexGeneralComponent.prototype, \"info\", void 0);\nKardexGeneralComponent = __decorate([Component({\n  selector: 'app-kardex-general',\n  templateUrl: './kardex-general.component.html',\n  styleUrls: ['./kardex-general.component.css']\n})], KardexGeneralComponent);\nexport { KardexGeneralComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","FormControl","FormGroup","DinamicTable","KardexGeneralComponent","constructor","fb","renderer","comunicatorSvc","routes","kardexSvc","coinsSvc","ngOnInit","title","ruta","setTimeout","url","slice","indexOf","push","decodeURI","toUpperCase","setTitleComponent","getKardex","subscribe","next","res","aux","console","log","kardex","currentData","products","complete","createPages","tableSearch","getData","getMainCoin","Array","mainCoin","search","numberRows","ngOnDestroy","data$","unsubscribe","__decorate","static","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/inventary-system/client/src/app/content/kardex/kardex-general/kardex-general.component.ts"],"sourcesContent":["import { Component, ElementRef, Renderer2, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription, tap } from 'rxjs';\nimport { ComunicatorComponetsService } from 'src/app/services/comunicator/comunicator-componets.service';\nimport { DinamicTable } from 'src/app/utils/DinamicTable';\nimport { KardexService } from '../service/kardex.service';\nimport { coin, kardex, product } from 'src/app/interfaces/interfaces';\nimport { CoinsService } from '../../configuraciones/service/coins.service';\n\n@Component({\n  selector: 'app-kardex-general',\n  templateUrl: './kardex-general.component.html',\n  styleUrls: ['./kardex-general.component.css']\n})\nexport class KardexGeneralComponent extends DinamicTable {\n  tableSearch!: FormGroup;\n  result: any[] = [];\n  data$?: Subscription;\n  kardex: kardex[] = []\n  currentData: kardex[] = []\n  products: product[] = []\n  mainCoin!:coin\n  //Elemento donde se insertaran los numeros \n  //de paginas para la paginacion\n  @ViewChild('pagination', { static: false }) override pagination?: ElementRef;\n  //Elemento antes del cual se comenzaran a insertar las paginas\n  @ViewChild('next', { static: false }) override next?: ElementRef;\n  @ViewChild('dataTables_info', { static: false }) override info?: ElementRef;\n\n  constructor(private fb: FormBuilder,\n    public override renderer: Renderer2,\n    public comunicatorSvc: ComunicatorComponetsService,\n    private routes: Router,\n    private kardexSvc: KardexService,\n    private coinsSvc:CoinsService) {\n    super(renderer)\n  }\n  ngOnInit() {\n\n    let title: string[] = [];\n    let ruta;\n    setTimeout(() => {\n      /* Obtengo la ruta actual y la transformo para obtener el titulo del componente*/\n      ruta = this.routes.url.slice((this.routes.url.slice(1).indexOf('/')) + 2);\n      title.push(decodeURI(ruta).toUpperCase());//a単ado el titulo al array\n      title.push(\"fas fa-pallet fa-fw\");//aa単ado el icono del titulo al array\n      this.comunicatorSvc.setTitleComponent(title);\n    })\n    this.kardexSvc.getKardex().subscribe({\n      next: res => {\n        let aux:any=res\n        console.log(res); \n        this.kardex = aux; \n        this.currentData = aux\n        this.products=aux\n      },\n      complete: () => {\n        this.createPages(this.tableSearch, this.currentData, this.kardex)\n        this.comunicatorSvc.getData().subscribe(res => this.currentData = res)\n      }\n    })\n    this.coinsSvc.getMainCoin().subscribe(res=>{\n      if(res instanceof Array)\n        this.mainCoin=res[0]\n      })\n    this.tableSearch = new FormGroup({\n      search: new FormControl(),\n      numberRows: new FormControl('10')\n    });\n  }\n\n  ngOnDestroy() {\n    this.data$?.unsubscribe();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}