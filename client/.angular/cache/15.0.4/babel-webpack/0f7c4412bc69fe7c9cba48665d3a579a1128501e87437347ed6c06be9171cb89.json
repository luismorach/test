{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { DinamicTable } from 'src/app/utils/DinamicTable';\nlet ComprasRealizadasComponent = class ComprasRealizadasComponent extends DinamicTable {\n  constructor(fb, renderer, comunicatorSvc, routes, comprasSvc, usersSvc, providersSvc) {\n    super(renderer);\n    this.fb = fb;\n    this.renderer = renderer;\n    this.comunicatorSvc = comunicatorSvc;\n    this.routes = routes;\n    this.comprasSvc = comprasSvc;\n    this.usersSvc = usersSvc;\n    this.providersSvc = providersSvc;\n    this.buys = [];\n    this.users = [];\n    this.providers = [];\n    this.title = [];\n    this.currentData = [];\n    this.date = new Date();\n    this.initialDate = new Date(this.date.getFullYear(), this.date.getMonth(), 1);\n    this.endDate = new Date(this.date.getFullYear(), this.date.getMonth() + 1, 0);\n  }\n  ngOnInit() {\n    let title = [];\n    let ruta;\n    setTimeout(() => {\n      /* Obtengo la ruta actual y la transformo para obtener el titulo del componente*/\n      ruta = this.routes.url.slice(this.routes.url.slice(1).indexOf('/') + 2, this.routes.url.lastIndexOf('?'));\n      title.push(decodeURI(ruta).toUpperCase()); //añado el titulo al array\n      title.push(\"fas fa-file-invoice-dollar fa-fw\"); //aañado el icono del titulo al array\n      this.comunicatorSvc.setTitleComponent(title);\n    });\n    this.data$ = this.comprasSvc.getBuysBydate(this.initialDate, this.endDate).subscribe({\n      next: res => {\n        res.forEach(buy => {\n          this.usersSvc.getUser(buy.id_user).subscribe(user => {\n            if (user instanceof Array) this.users.push(user[0]);\n          });\n          this.providersSvc.getProvider(buy.id_provider).subscribe(provider => {\n            if (provider instanceof Array) this.providers.push(provider[0]);\n          });\n        });\n        this.currentData = res;\n        this.buys = res;\n      },\n      error: error => {\n        this.error(error);\n      },\n      complete: () => {\n        //inserto la cantidad de paginas al DOM segun la cantidad de datos que tengo\n        this.createPages(this.tableSearch, this.currentData, this.buys);\n        //Me suscribo al observer para obtener la lista de usuarios actuales\n        //Si se filtran los datos, me devolvera lao usuarios filtradas\n        //si no, me devolvera todas los usuarios\n        this.comunicatorSvc.getData().subscribe(res => this.currentData = res);\n      }\n    });\n    this.tableSearch = new FormGroup({\n      search: new FormControl(),\n      numberRows: new FormControl('10')\n    });\n  }\n  error(error) {\n    this.changeModal(this.comunicatorSvc.errorServer(error));\n    this.popUp?.nativeElement.showModal();\n  }\n  redirectToDetallesCompra(buy) {\n    this.routes.navigate(['/compras/detalles compra'], {\n      queryParams: {\n        id_buy: buy.id_buy\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.data$?.unsubscribe();\n  }\n};\n__decorate([ViewChild('pagination', {\n  static: false\n})], ComprasRealizadasComponent.prototype, \"pagination\", void 0);\n__decorate([ViewChild('next', {\n  static: false\n})], ComprasRealizadasComponent.prototype, \"next\", void 0);\n__decorate([ViewChild('dataTables_info', {\n  static: false\n})], ComprasRealizadasComponent.prototype, \"info\", void 0);\n__decorate([ViewChild('rows', {\n  static: false\n})], ComprasRealizadasComponent.prototype, \"row\", void 0);\n__decorate([ViewChild('popup', {\n  static: true\n})], ComprasRealizadasComponent.prototype, \"popUp\", void 0);\nComprasRealizadasComponent = __decorate([Component({\n  selector: 'app-compras-realizadas',\n  templateUrl: './compras-realizadas.component.html',\n  styleUrls: ['./compras-realizadas.component.css']\n})], ComprasRealizadasComponent);\nexport { ComprasRealizadasComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","FormControl","FormGroup","DinamicTable","ComprasRealizadasComponent","constructor","fb","renderer","comunicatorSvc","routes","comprasSvc","usersSvc","providersSvc","Date","date","getFullYear","getMonth","ngOnInit","title","ruta","setTimeout","url","slice","indexOf","lastIndexOf","push","decodeURI","toUpperCase","setTitleComponent","data$","getBuysBydate","initialDate","endDate","subscribe","next","res","forEach","buy","getUser","id_user","user","Array","users","getProvider","id_provider","provider","providers","currentData","buys","error","complete","createPages","tableSearch","getData","search","numberRows","changeModal","errorServer","popUp","nativeElement","showModal","redirectToDetallesCompra","navigate","queryParams","id_buy","ngOnDestroy","unsubscribe","__decorate","static","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/inventary-system/client/src/app/content/compras/compras-realizadas/compras-realizadas.component.ts"],"sourcesContent":["import { Component, ElementRef, Renderer2, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable, Subscription, tap } from 'rxjs';\nimport { buy, fullBuy, provider, user } from 'src/app/interfaces/interfaces';\nimport { ComunicatorComponetsService } from 'src/app/services/comunicator/comunicator-componets.service';\nimport { DinamicTable } from 'src/app/utils/DinamicTable';\nimport { ComprasService } from '../service/compras.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { UsuariosService } from '../../administracion/usuarios/service/usuarios.service';\nimport { ProveedoresService } from '../../administracion/proveedores/service/proveedores.service';\n\n@Component({\n  selector: 'app-compras-realizadas',\n  templateUrl: './compras-realizadas.component.html',\n  styleUrls: ['./compras-realizadas.component.css']\n})\nexport class ComprasRealizadasComponent extends DinamicTable {\n\n\n  tableSearch!: FormGroup;\n  data$!: Subscription;\n  buys: buy[] = [];\n  users: user[] = []\n  providers: provider[] = []\n  title: string[] = [];\n  currentData: buy[] = [];\n  buyToDelete!: buy;\n  date=new Date()\n  initialDate:Date=new Date(this.date.getFullYear(), this.date.getMonth(), 1)\n  endDate:Date=new Date(this.date.getFullYear(), this.date.getMonth() + 1, 0)\n\n  //Elemento donde se insertaran los numeros \n  //de paginas para la paginacion\n  @ViewChild('pagination', { static: false }) override pagination?: ElementRef;\n  //Elemento antes del cual se comenzaran a insertar las paginas\n  @ViewChild('next', { static: false }) override next?: ElementRef;\n  //Elemento que muestra la informacion acerca de la cantidad de paginas mostradas, y filtradas\n  @ViewChild('dataTables_info', { static: false }) override info?: ElementRef;\n  //Elemento que tiene todas las filas de la tabla de la vista\n  @ViewChild('rows', { static: false }) row?: ElementRef;\n  //Elemento modal para mostrar alertas\n  @ViewChild('popup', { static: true }) override popUp?: ElementRef;\n\n\n  constructor(private fb: FormBuilder,\n    public override renderer: Renderer2,\n    private comunicatorSvc: ComunicatorComponetsService,\n    private routes: Router,\n    private comprasSvc: ComprasService,\n    private usersSvc: UsuariosService,\n    private providersSvc: ProveedoresService) {\n    super(renderer)\n  }\n  ngOnInit() {\n\n    let title: string[] = [];\n    let ruta;\n    setTimeout(() => {\n      /* Obtengo la ruta actual y la transformo para obtener el titulo del componente*/\n      ruta = this.routes.url.slice((this.routes.url.slice(1).indexOf('/')) + 2, this.routes.url.lastIndexOf('?'));\n      title.push(decodeURI(ruta).toUpperCase());//añado el titulo al array\n      title.push(\"fas fa-file-invoice-dollar fa-fw\");//aañado el icono del titulo al array\n      this.comunicatorSvc.setTitleComponent(title);\n    })\n    this.data$ = this.comprasSvc.getBuysBydate(this.initialDate,this.endDate).subscribe({\n      next: res => {\n        res.forEach((buy: buy) => {\n          this.usersSvc.getUser(buy.id_user).subscribe(\n            user => {\n              if (user instanceof Array)\n                this.users.push(user[0])\n            })\n          this.providersSvc.getProvider(buy.id_provider).subscribe(\n            provider=>{\n              if (provider instanceof Array)\n                this.providers.push(provider[0])\n            }\n          )\n        });\n        this.currentData = res;\n        this.buys = res\n      },\n      error: (error: HttpErrorResponse) => {\n        this.error(error)\n      },\n      complete: () => {\n        //inserto la cantidad de paginas al DOM segun la cantidad de datos que tengo\n        this.createPages(this.tableSearch, this.currentData, this.buys)\n        //Me suscribo al observer para obtener la lista de usuarios actuales\n        //Si se filtran los datos, me devolvera lao usuarios filtradas\n        //si no, me devolvera todas los usuarios\n        this.comunicatorSvc.getData().subscribe(res => this.currentData = res)\n      }\n    })\n\n    this.tableSearch = new FormGroup({\n      search: new FormControl(),\n      numberRows: new FormControl('10')\n    });\n  }\n\n  public error(error: HttpErrorResponse) {\n    this.changeModal(this.comunicatorSvc.errorServer(error))\n    this.popUp?.nativeElement.showModal()\n  }\n  redirectToDetallesCompra(buy:buy){\n    this.routes.navigate(['/compras/detalles compra'],{queryParams:{id_buy:buy.id_buy}})\n  }\n\n  ngOnDestroy() {\n    this.data$?.unsubscribe();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}