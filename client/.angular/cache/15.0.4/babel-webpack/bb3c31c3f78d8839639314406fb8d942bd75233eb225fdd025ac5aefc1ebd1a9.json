{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsuariosService {\n  constructor(http) {\n    this.http = http;\n    this.apiURL = 'http://localhost:3000/users';\n  }\n  //accedo al backend para obtener datos de todas las proveedores\n  getUsers() {\n    return this.http.get(this.apiURL);\n  }\n  //accedo al backend para obtener datos de la proveedor cuyo id se pasa como parametro\n  getUser(id_User) {\n    return this.http.get(this.apiURL + '/' + id_User);\n  }\n  //accedo al backend para crear un nueva proveedor\n  setUser(User) {\n    return this.http.post(this.apiURL, User);\n  }\n  //accedo al backend para actualizar datos del proveedor cuyo id se pasa como parametro\n  updateUser(id_User, User) {\n    return this.http.put(this.apiURL + '/' + id_User, User);\n  }\n  //accedo al backend para eliminar el proveedor cuyo id se pasa como parametro\n  deleteUser(id_user) {\n    return this.http.delete(this.apiURL + '/' + id_user);\n  }\n}\nUsuariosService.ɵfac = function UsuariosService_Factory(t) {\n  return new (t || UsuariosService)(i0.ɵɵinject(i1.HttpClient));\n};\nUsuariosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsuariosService,\n  factory: UsuariosService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADhB,WAAM,GAAG,6BAA6B;EACN;EAExC;EACOC,QAAQ;IACb,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAS,IAAI,CAACC,MAAM,CAAC;EAC3C;EAEA;EACOC,OAAO,CAACC,OAAe;IAC5B,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAe,IAAI,CAACC,MAAM,GAAG,GAAG,GAAGE,OAAO,CAAC;EACjE;EAEA;EACOC,OAAO,CAACC,IAAU;IACvB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAQ,IAAI,CAACL,MAAM,EAAEI,IAAI,CAAC;EACjD;EAEA;EACOE,UAAU,CAACJ,OAAe,EAAEE,IAAU;IAC3C,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAQ,IAAI,CAACP,MAAM,GAAG,GAAG,GAAGE,OAAO,EAAEE,IAAI,CAAC;EAChE;EAEC;EACMI,UAAU,CAACC,OAAe;IAC/B,OAAO,IAAI,CAACZ,IAAI,CAACa,MAAM,CAAQ,IAAI,CAACV,MAAM,GAAG,GAAG,GAAGS,OAAO,CAAC;EAC7D;;AA5BWd,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAgB,SAAfhB,eAAe;EAAAiB,YAFd;AAAM","names":["UsuariosService","constructor","http","getUsers","get","apiURL","getUser","id_User","setUser","User","post","updateUser","put","deleteUser","id_user","delete","factory","providedIn"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/inventary-system/client/src/app/administrador/content/administracion/usuarios/service/usuarios.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { user,alert } from 'src/app/interfaces/interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuariosService {\n\n  private apiURL = 'http://localhost:3000/users';\n  constructor(private http: HttpClient) { }\n\n  //accedo al backend para obtener datos de todas las proveedores\n  public getUsers(): Observable<user[]> {\n    return this.http.get<user[]>(this.apiURL);\n  }\n\n  //accedo al backend para obtener datos de la proveedor cuyo id se pasa como parametro\n  public getUser(id_User: number): Observable<user[]|alert> {\n    return this.http.get<user[]|alert>(this.apiURL + '/' + id_User);\n  }\n\n  //accedo al backend para crear un nueva proveedor\n  public setUser(User: user): Observable<alert> {\n    return this.http.post<alert>(this.apiURL, User)\n  }\n\n  //accedo al backend para actualizar datos del proveedor cuyo id se pasa como parametro\n  public updateUser(id_User: number, User: user): Observable<alert> {\n    return this.http.put<alert>(this.apiURL + '/' + id_User, User)\n  }\n\n   //accedo al backend para eliminar el proveedor cuyo id se pasa como parametro\n  public deleteUser(id_user: number): Observable<alert> {\n    return this.http.delete<alert>(this.apiURL + '/' + id_user)\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}