{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { DinamicTable } from 'src/app/utils/DinamicTable';\nlet VentasRealizadasComponent = class VentasRealizadasComponent extends DinamicTable {\n  constructor(fb, renderer, comunicatorSvc, routes, ventasSvc, route) {\n    super(renderer);\n    this.fb = fb;\n    this.renderer = renderer;\n    this.comunicatorSvc = comunicatorSvc;\n    this.routes = routes;\n    this.ventasSvc = ventasSvc;\n    this.route = route;\n    this.result = [];\n    this.date = new Date();\n    this.initialDate = new Date(this.date.getFullYear(), this.date.getMonth(), 1);\n    this.endDate = new Date(this.date.getFullYear(), this.date.getMonth() + 1, 0);\n    this.currentData = [];\n    this.sells = [];\n  }\n  ngOnInit() {\n    let title = [];\n    let ruta;\n    setTimeout(() => {\n      /* Obtengo la ruta actual y la transformo para obtener el titulo del componente*/\n      ruta = this.routes.url.slice(this.routes.url.slice(1).indexOf('/') + 2);\n      title.push(decodeURI(ruta).toUpperCase()); //añado el titulo al array\n      title.push(\"fas fa-coins fa-fw\"); //aañado el icono del titulo al array\n      this.comunicatorSvc.setTitleComponent(title);\n    });\n    this.route.queryParams.subscribe(params => {\n      if (Object.entries(params).length === 2) {\n        this.initialDate = new Date(params['initialDate']), this.endDate = new Date(params['endDate']);\n      } else if (Object.entries(params).length === 1) {\n        this.criterio = params['criterio'];\n      }\n      if (Object.entries(params).length === 2 || Object.entries(params).length === 0) {\n        this.data$ = this.ventasSvc.getSellsBydate(this.initialDate, this.endDate).subscribe({\n          next: res => {\n            this.buscarAspectosDeVenta(res);\n          },\n          error: error => {\n            this.error(error);\n          },\n          complete: () => {\n            this.createPages(this.tableSearch, this.currentData, this.sells);\n            this.comunicatorSvc.getData().subscribe(res => this.currentData = res);\n          }\n        });\n      } else {\n        if (Number(Number.isNaN(Number(this.criterio)))) {\n          this.data$ = this.ventasSvc.getSellByUser(this.criterio).subscribe({\n            next: res => {\n              if (res instanceof Array) {\n                if (res.length === 0) {\n                  /* this.ventasSvc.getsellByProvider(this.criterio).subscribe({\n                   next:res=>{this.buscarAspectosDeVenta(res)},\n                   complete: () => {\n                     this.createPages(this.tableSearch, this.currentData, this.Ventas)\n                     this.comunicatorSvc.getData().subscribe(res => this.currentData = res)\n                   }\n                  }) */\n                } else {\n                  this.buscarAspectosDeVenta(res);\n                }\n              }\n            },\n            complete: () => {\n              this.createPages(this.tableSearch, this.currentData, this.sells);\n              this.comunicatorSvc.getData().subscribe(res => this.currentData = res);\n            }\n          });\n        } else {\n          this.data$ = this.ventasSvc.getSell(Number(this.criterio)).subscribe({\n            next: res => {\n              this.buscarAspectosDeVenta(res);\n            },\n            complete: () => {\n              this.createPages(this.tableSearch, this.currentData, this.sells);\n              this.comunicatorSvc.getData().subscribe(res => this.currentData = res);\n            }\n          });\n        }\n      }\n    });\n    this.tableSearch = new FormGroup({\n      search: new FormControl(),\n      numberRows: new FormControl('10')\n    });\n  }\n  error(error) {\n    this.changeModal(this.comunicatorSvc.errorServer(error));\n    this.popUp?.nativeElement.showModal();\n  }\n  redirectToDetallesCompra(sell) {\n    this.routes.navigate(['/ventas/detalles venta'], {\n      queryParams: {\n        id_sell: sell.id_sell\n      }\n    });\n  }\n  buscarAspectosDeVenta(res) {\n    if (res instanceof Array) {\n      /* res.forEach((sell: sell) => {\n        this.usersSvc.getUser(sell.id_user).subscribe(\n          user => {\n            if (user instanceof Array)\n              this.users.push(user[0])\n          })\n        this.providersSvc.getProvider(sell.id_provider).subscribe(\n          provider => {\n            if (provider instanceof Array)\n              this.providers.push(provider[0])\n          }\n        )\n      }); */\n      this.currentData = res;\n      this.sells = res;\n    } else {\n      this.changeModal(res);\n      this.popUp?.nativeElement.showModal();\n    }\n  }\n  ngOnDestroy() {\n    this.data$?.unsubscribe();\n  }\n};\n__decorate([ViewChild('pagination', {\n  static: false\n})], VentasRealizadasComponent.prototype, \"pagination\", void 0);\n__decorate([ViewChild('next', {\n  static: false\n})], VentasRealizadasComponent.prototype, \"next\", void 0);\n__decorate([ViewChild('dataTables_info', {\n  static: false\n})], VentasRealizadasComponent.prototype, \"info\", void 0);\nVentasRealizadasComponent = __decorate([Component({\n  selector: 'app-ventas-realizadas',\n  templateUrl: './ventas-realizadas.component.html',\n  styleUrls: ['./ventas-realizadas.component.css']\n})], VentasRealizadasComponent);\nexport { VentasRealizadasComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","FormControl","FormGroup","DinamicTable","VentasRealizadasComponent","constructor","fb","renderer","comunicatorSvc","routes","ventasSvc","route","Date","date","getFullYear","getMonth","ngOnInit","title","ruta","setTimeout","url","slice","indexOf","push","decodeURI","toUpperCase","setTitleComponent","queryParams","subscribe","params","Object","entries","length","initialDate","endDate","criterio","data$","getSellsBydate","next","res","buscarAspectosDeVenta","error","complete","createPages","tableSearch","currentData","sells","getData","Number","isNaN","getSellByUser","Array","getSell","search","numberRows","changeModal","errorServer","popUp","nativeElement","showModal","redirectToDetallesCompra","sell","navigate","id_sell","ngOnDestroy","unsubscribe","__decorate","static","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/inventary-system/client/src/app/content/ventas/ventas-realizadas/ventas-realizadas.component.ts"],"sourcesContent":["import { Component, ElementRef, Renderer2, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription, tap } from 'rxjs';\nimport { ComunicatorComponetsService } from 'src/app/services/comunicator/comunicator-componets.service';\nimport { DinamicTable } from 'src/app/utils/DinamicTable';\nimport { VentasService } from '../service/ventas.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { alert, sell, client, user } from 'src/app/interfaces/interfaces';\n@Component({\n  selector: 'app-ventas-realizadas',\n  templateUrl: './ventas-realizadas.component.html',\n  styleUrls: ['./ventas-realizadas.component.css']\n})\nexport class VentasRealizadasComponent extends DinamicTable{\n\n  tableSearch!: FormGroup;\n  result: any[] = [];\n  data$?:Subscription;\n  date = new Date()\n  initialDate: Date = new Date(this.date.getFullYear(), this.date.getMonth(), 1)\n  endDate: Date = new Date(this.date.getFullYear(), this.date.getMonth() + 1, 0)\n  criterio!: string;\n  currentData: sell[] = [];\n  sells:sell[]=[]\n  //Elemento donde se insertaran los numeros \n  //de paginas para la paginacion\n  @ViewChild('pagination', { static: false }) override pagination?: ElementRef;\n  //Elemento antes del cual se comenzaran a insertar las paginas\n  @ViewChild('next', { static: false }) override next?: ElementRef;\n  @ViewChild('dataTables_info', { static: false }) override info?: ElementRef;\n\n  constructor(private fb: FormBuilder,\n    public override renderer: Renderer2,\n    private comunicatorSvc: ComunicatorComponetsService, \n    private routes: Router,\n    private ventasSvc:VentasService,\n    private route: ActivatedRoute,) {\n    super(renderer)\n  }\n  ngOnInit() {\n\n    let title: string[] = [];\n    let ruta;\n    setTimeout(() => {\n      /* Obtengo la ruta actual y la transformo para obtener el titulo del componente*/\n      ruta = this.routes.url.slice((this.routes.url.slice(1).indexOf('/')) + 2);\n      title.push(decodeURI(ruta).toUpperCase());//añado el titulo al array\n      title.push(\"fas fa-coins fa-fw\");//aañado el icono del titulo al array\n      this.comunicatorSvc.setTitleComponent(title);\n    })\n    this.route.queryParams.subscribe((params) => {\n\n      if (Object.entries(params).length === 2) {\n        this.initialDate = new Date(params['initialDate']),\n          this.endDate = new Date(params['endDate'])\n      } else if (Object.entries(params).length === 1) {\n        this.criterio = params['criterio']\n      }\n      if (Object.entries(params).length === 2 || Object.entries(params).length === 0) {\n\n        this.data$ = this.ventasSvc.getSellsBydate(this.initialDate, this.endDate).subscribe({\n          next: res => {\n            this.buscarAspectosDeVenta(res)\n          },\n          error: (error: HttpErrorResponse) => {\n            this.error(error)\n          },\n          complete: () => {\n            this.createPages(this.tableSearch, this.currentData, this.sells)\n            this.comunicatorSvc.getData().subscribe(res => this.currentData = res)\n          }\n        })\n      } else {\n        if (Number(Number.isNaN(Number(this.criterio)))) {\n          this.data$=this.ventasSvc.getSellByUser(this.criterio).subscribe({\n            next:res=>{\n              if(res instanceof Array){\n                if(res.length===0){\n                 /* this.ventasSvc.getsellByProvider(this.criterio).subscribe({\n                  next:res=>{this.buscarAspectosDeVenta(res)},\n                  complete: () => {\n                    this.createPages(this.tableSearch, this.currentData, this.Ventas)\n                    this.comunicatorSvc.getData().subscribe(res => this.currentData = res)\n                  }\n                 }) */\n                }else{\n                  this.buscarAspectosDeVenta(res)\n                }\n              }\n            },\n            complete: () => {\n              this.createPages(this.tableSearch, this.currentData, this.sells)\n              this.comunicatorSvc.getData().subscribe(res => this.currentData = res)\n            }\n          })\n        } else {\n          this.data$ = this.ventasSvc.getSell(Number(this.criterio)).subscribe({\n            next: res => { this.buscarAspectosDeVenta(res) },\n            complete: () => {\n              this.createPages(this.tableSearch, this.currentData, this.sells)\n              this.comunicatorSvc.getData().subscribe(res => this.currentData = res)\n            }\n          })\n        }\n      }\n    })\n\n    this.tableSearch = new FormGroup({\n      search: new FormControl(),\n      numberRows: new FormControl('10')\n    });\n  }\n  public error(error: HttpErrorResponse) {\n    this.changeModal(this.comunicatorSvc.errorServer(error))\n    this.popUp?.nativeElement.showModal()\n  }\n  redirectToDetallesCompra(sell:sell) {\n    this.routes.navigate(['/ventas/detalles venta'], { queryParams: { id_sell: sell.id_sell } })\n  }\n  buscarAspectosDeVenta(res: sell[] | alert) {\n    if (res instanceof Array) {\n      /* res.forEach((sell: sell) => {\n        this.usersSvc.getUser(sell.id_user).subscribe(\n          user => {\n            if (user instanceof Array)\n              this.users.push(user[0])\n          })\n        this.providersSvc.getProvider(sell.id_provider).subscribe(\n          provider => {\n            if (provider instanceof Array)\n              this.providers.push(provider[0])\n          }\n        )\n      }); */\n      this.currentData = res;\n      this.sells = res\n    } else {\n      this.changeModal(res)\n      this.popUp?.nativeElement.showModal()\n    }\n  }\n\n  ngOnDestroy() {\n    this.data$?.unsubscribe();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}