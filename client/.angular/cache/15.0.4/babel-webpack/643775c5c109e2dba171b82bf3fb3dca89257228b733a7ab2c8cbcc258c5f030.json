{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ComunicatorComponetsService {\n  constructor() {\n    this.listData$ = new BehaviorSubject([]);\n    this.state$ = new BehaviorSubject(true);\n  }\n  setshowHideNavBar(state) {\n    this.state$.next(state);\n  }\n  getShowHideNavBar() {\n    return this.state$.asObservable();\n  }\n  setData(data) {\n    this.listData$.next(data);\n  }\n  getData() {\n    return this.listData$.asObservable();\n  }\n}\nComunicatorComponetsService.ɵfac = function ComunicatorComponetsService_Factory(t) {\n  return new (t || ComunicatorComponetsService)();\n};\nComunicatorComponetsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ComunicatorComponetsService,\n  factory: ComunicatorComponetsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAA6B,MAAM;;AAK3D,OAAM,MAAOC,2BAA2B;EAGtCC;IAFQ,cAAS,GAAyB,IAAIF,eAAe,CAAQ,EAAE,CAAC;IAChE,WAAM,GAA6B,IAAIA,eAAe,CAAU,IAAI,CAAC;EAC7D;EAETG,iBAAiB,CAACC,KAAc;IACrC,IAAI,CAACC,MAAM,CAACC,IAAI,CAACF,KAAK,CAAC;EACzB;EAEOG,iBAAiB;IACtB,OAAO,IAAI,CAACF,MAAM,CAACG,YAAY,EAAE;EACnC;EAEOC,OAAO,CAACC,IAAQ;IACrB,IAAI,CAACC,SAAS,CAACL,IAAI,CAACI,IAAI,CAAC;EAC3B;EACOE,OAAO;IACZ,OAAO,IAAI,CAACD,SAAS,CAACH,YAAY,EAAE;EACtC;;AAlBWP,2BAA2B;mBAA3BA,2BAA2B;AAAA;AAA3BA,2BAA2B;SAA3BA,2BAA2B;EAAAY,SAA3BZ,2BAA2B;EAAAa,YAF1B;AAAM","names":["BehaviorSubject","ComunicatorComponetsService","constructor","setshowHideNavBar","state","state$","next","getShowHideNavBar","asObservable","setData","data","listData$","getData","factory","providedIn"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/app/src/app/services/comunicator/comunicator-componets.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComunicatorComponetsService {\n  private listData$: BehaviorSubject<any[]>=new BehaviorSubject<any[]>([]);\n  private state$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n  constructor() { }\n\n  public setshowHideNavBar(state: boolean) {\n    this.state$.next(state);\n  }\n\n  public getShowHideNavBar(): Observable<boolean> {\n    return this.state$.asObservable();\n  }\n  \n  public setData(data:any){\n    this.listData$.next(data)\n  }\n  public getData(){\n    return this.listData$.asObservable();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}