{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { DinamicInput } from 'src/app/utils/DinamicInput';\nlet NuevaCajaComponent = class NuevaCajaComponent extends DinamicInput {\n  constructor(fb, comunicatorSvc$, routes, route, renderer, cajasSvc) {\n    super();\n    this.fb = fb;\n    this.comunicatorSvc$ = comunicatorSvc$;\n    this.routes = routes;\n    this.route = route;\n    this.renderer = renderer;\n    this.cajasSvc = cajasSvc;\n    this.usedClass = [];\n  }\n  ngOnInit() {\n    setTimeout(() => {\n      this.usedClass[0] = \"input-on-focus\";\n      this.ruta = this.routes.url.slice(this.routes.url.slice(1).indexOf('/') + 2);\n      this.title = [];\n      if (this.ruta.indexOf(\"actualizar\")) {\n        this.title.push(\"fa-solid fa-cash-register fa-fw\"); //aañado el icono del titulo al array\n      } else {\n        this.ruta = this.routes.url.slice(this.routes.url.slice(1).indexOf('/') + 2, this.routes.url.lastIndexOf('/'));\n        this.title.push(\"fa fa-arrows-rotate\");\n      }\n      this.title.push(decodeURI(this.ruta).toUpperCase()); //añado el titulo al array\n      this.comunicatorSvc$.setTitleComponent(this.title);\n    });\n    this.newRegister = this.fb.group({\n      name: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]+$/)]),\n      state: new FormControl('Habilitada')\n    });\n    if (this.routes.url.includes(\"actualizar\")) {\n      this.route.paramMap.subscribe(params => {\n        this.id_register = Number(params.get('id_register'));\n        this.cajasSvc.getRegister(this.id_register).subscribe({\n          next: res => {\n            if (res instanceof Array) {\n              this.newRegister.get('name')?.setValue(res[0].name);\n              this.newRegister.get('state')?.setValue(res[0].state);\n              this.registerToUpdate = res[0];\n            } else {\n              this.changeModal(res);\n              this.popUp?.nativeElement.showModal();\n            }\n          },\n          error: error => {\n            this.error(error);\n          }\n        });\n      });\n    }\n  }\n  error(error) {\n    this.changeModal(this.comunicatorSvc$.errorServer(error));\n    this.popUp?.nativeElement.showModal();\n  }\n  submit() {\n    this.cajasSvc.setRegister(this.newRegister.value).subscribe({\n      next: res => {\n        this.changeModal(res);\n        this.popUp?.nativeElement.showModal();\n      },\n      error: error => {\n        this.error(error);\n      }\n    });\n  }\n  acept() {\n    this.popUp?.nativeElement.close();\n    if (this.popUp?.nativeElement.children[1].textContent === '¿Estás seguro?') {\n      if (this.ruta.indexOf(\"actualizar\")) {\n        this.submit();\n      } else if (this.popUp?.nativeElement.children[2].textContent.includes('¿desea continuar?')) {\n        this.redirectToListRegisters();\n      } else {\n        this.validarUpdate();\n      }\n    } else if (this.popUp?.nativeElement.children[1].textContent.includes('Actualizada') && this.ruta.indexOf(\"nueva\")) {\n      this.redirectToListRegisters();\n    }\n  }\n  validarUpdate() {\n    if (this.newRegister.get('name')?.value === this.registerToUpdate.name && this.newRegister.get('state')?.value === this.registerToUpdate.state) {\n      let msj = {\n        icon: '',\n        title: '¿Estás seguro?',\n        content: 'No ha modificado los datos de la caja ¿desea continuar?'\n      };\n      this.changeModal(msj);\n      this.popUp?.nativeElement.showModal();\n    } else {\n      this.update();\n    }\n  }\n  clean() {\n    this.newRegister.get('name')?.setValue('');\n  }\n  update() {\n    this.cajasSvc.updateRegister(Number(this.id_register), this.newRegister.value).subscribe({\n      next: res => {\n        this.changeModal(res);\n        this.popUp?.nativeElement.showModal();\n      },\n      error: error => {\n        this.error(error);\n      }\n    });\n  }\n  redirectToListRegisters() {\n    this.routes.navigate(['/administracion/lista cajas']);\n  }\n};\n__decorate([ViewChild('popup', {\n  static: true\n})], NuevaCajaComponent.prototype, \"popUp\", void 0);\nNuevaCajaComponent = __decorate([Component({\n  selector: 'app-nueva-caja',\n  templateUrl: './nueva-caja.component.html',\n  styleUrls: ['./nueva-caja.component.css']\n})], NuevaCajaComponent);\nexport { NuevaCajaComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","FormControl","Validators","DinamicInput","NuevaCajaComponent","constructor","fb","comunicatorSvc$","routes","route","renderer","cajasSvc","ngOnInit","setTimeout","usedClass","ruta","url","slice","indexOf","title","push","lastIndexOf","decodeURI","toUpperCase","setTitleComponent","newRegister","group","name","required","pattern","state","includes","paramMap","subscribe","params","id_register","Number","get","getRegister","next","res","Array","setValue","registerToUpdate","changeModal","popUp","nativeElement","showModal","error","errorServer","submit","setRegister","value","acept","close","children","textContent","redirectToListRegisters","validarUpdate","msj","icon","content","update","clean","updateRegister","navigate","__decorate","static","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/inventary-system/client/src/app/content/administracion/cajas/nueva-caja/nueva-caja.component.ts"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, ElementRef, Renderer2, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { ComunicatorComponetsService } from 'src/app/services/comunicator/comunicator-componets.service';\nimport { DinamicInput } from 'src/app/utils/DinamicInput';\nimport { CajasService } from '../service/cajas.service';\nimport { register,alert } from 'src/app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-nueva-caja',\n  templateUrl: './nueva-caja.component.html',\n  styleUrls: ['./nueva-caja.component.css']\n})\n\nexport class NuevaCajaComponent extends DinamicInput {\n\n  newRegister!: FormGroup;\n  usedClass: string[] = [];\n  title!: string[];\n  ruta!: string;\n  id_register!: number;\n  registerToUpdate!:register\n\n  @ViewChild('popup', { static: true }) override popUp?: ElementRef;\n\n  constructor(private fb: FormBuilder, private comunicatorSvc$: ComunicatorComponetsService,\n    public routes: Router, private route: ActivatedRoute, protected override renderer: Renderer2,\n    private cajasSvc: CajasService) {\n    super();\n\n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.usedClass[0] = \"input-on-focus\";\n      this.ruta = this.routes.url.slice((this.routes.url.slice(1).indexOf('/')) + 2);\n      this.title = []\n      if (this.ruta.indexOf(\"actualizar\")) {\n        this.title.push(\"fa-solid fa-cash-register fa-fw\");//aañado el icono del titulo al array\n      } else {\n        this.ruta = this.routes.url.slice((this.routes.url.slice(1).indexOf('/')) + 2, this.routes.url.lastIndexOf('/'));\n        this.title.push(\"fa fa-arrows-rotate\");\n      }\n      this.title.push(decodeURI(this.ruta).toUpperCase());//añado el titulo al array\n      this.comunicatorSvc$.setTitleComponent(this.title);\n    })\n\n    this.newRegister = this.fb.group({\n      name: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]+$/)]),\n      state: new FormControl('Habilitada')\n    })\n    if (this.routes.url.includes(\"actualizar\")) {\n      this.route.paramMap.subscribe((params: ParamMap) => {\n        this.id_register = Number(params.get('id_register'));\n        this.cajasSvc.getRegister(this.id_register).subscribe({\n          next: res => {\n            if (res instanceof Array) {\n              this.newRegister.get('name')?.setValue(res[0].name)\n              this.newRegister.get('state')?.setValue(res[0].state)\n              this.registerToUpdate=res[0]\n            } else {\n              this.changeModal(res)\n              this.popUp?.nativeElement.showModal()\n            }\n          },\n          error: (error: HttpErrorResponse) => {\n            this.error(error)\n          }\n        });\n      });\n    }\n  }\n  public error(error: HttpErrorResponse) {\n    this.changeModal(this.comunicatorSvc$.errorServer(error))\n    this.popUp?.nativeElement.showModal()\n  }\n\n  submit() {\n    this.cajasSvc.setRegister(this.newRegister.value).subscribe({\n      next: res => {\n        this.changeModal(res);\n        this.popUp?.nativeElement.showModal()\n      },\n      error: (error: HttpErrorResponse) => {\n        this.error(error)\n      }\n    })\n  }\n  acept() {\n    this.popUp?.nativeElement.close();\n    if (this.popUp?.nativeElement.children[1].textContent === '¿Estás seguro?') {\n      if (this.ruta.indexOf(\"actualizar\")) {\n        this.submit()\n      } else if(this.popUp?.nativeElement.children[2].textContent.includes('¿desea continuar?')){\n        this.redirectToListRegisters();\n      }else {\n        this.validarUpdate()\n      }\n    }else if(this.popUp?.nativeElement.children[1].textContent.includes('Actualizada')&&\n    this.ruta.indexOf(\"nueva\")){\n      this.redirectToListRegisters();\n    }\n  }\n  validarUpdate(){\n    if(this.newRegister.get('name')?.value===this.registerToUpdate.name && \n    this.newRegister.get('state')?.value===this.registerToUpdate.state){\n      let msj:alert={\n        icon:'',\n        title:'¿Estás seguro?',\n        content:'No ha modificado los datos de la caja ¿desea continuar?'\n      }\n      this.changeModal(msj)\n      this.popUp?.nativeElement.showModal()\n    }else{\n      this.update()\n    }\n  }\n\n  clean() {\n    this.newRegister.get('name')?.setValue('');\n  }\n  update() {\n    this.cajasSvc.updateRegister(Number(this.id_register),\n      this.newRegister.value).subscribe({\n        next: res => {\n          this.changeModal(res);\n          this.popUp?.nativeElement.showModal();\n        },\n        error: (error: HttpErrorResponse) => {\n          this.error(error);\n        }\n      })\n  }\n  redirectToListRegisters() {\n    this.routes.navigate(['/administracion/lista cajas'])\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}