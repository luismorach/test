{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClientesService {\n  constructor(http) {\n    this.http = http;\n    this.apiURL = 'http://localhost:3000/clients';\n  }\n  //accedo al backend para obtener datos de todas las categorias\n  getClients() {\n    return this.http.get(this.apiURL);\n  }\n  //accedo al backend para obtener datos de la categoria cuyo id se pasa como parametro\n  getClient(id_client) {\n    return this.http.get(this.apiURL + '/' + id_client);\n  }\n  //accedo al backend para crear una nueva categoria\n  setClient(client) {\n    return this.http.post(this.apiURL, client);\n  }\n  //accedo al backend para actualizar datos de la categoria cuyo id se pasa como parametro\n  updateClient(id_client, client) {\n    return this.http.put(this.apiURL + '/' + id_client, client);\n  }\n  //accedo al backend para eliminar la categoria cuyo id se pasa como parametro\n  deleteClient(id_client) {\n    return this.http.delete(this.apiURL + '/' + id_client);\n  }\n}\nClientesService.ɵfac = function ClientesService_Factory(t) {\n  return new (t || ClientesService)(i0.ɵɵinject(i1.HttpClient));\n};\nClientesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ClientesService,\n  factory: ClientesService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADhB,WAAM,GAAG,+BAA+B;EACR;EAExC;EACOC,UAAU;IACf,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAW,IAAI,CAACC,MAAM,CAAC;EAC7C;EAEA;EACOC,SAAS,CAACC,SAAiB;IAChC,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAiB,IAAI,CAACC,MAAM,GAAG,GAAG,GAAGE,SAAS,CAAC;EACrE;EAEA;EACOC,SAAS,CAACC,MAAc;IAC7B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAQ,IAAI,CAACL,MAAM,EAAEI,MAAM,CAAC;EACnD;EAEA;EACOE,YAAY,CAACJ,SAAiB,EAAEE,MAAc;IACnD,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAQ,IAAI,CAACP,MAAM,GAAG,GAAG,GAAGE,SAAS,EAAEE,MAAM,CAAC;EACpE;EAEC;EACMI,YAAY,CAACN,SAAiB;IACnC,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAQ,IAAI,CAACT,MAAM,GAAG,GAAG,GAAGE,SAAS,CAAC;EAC/D;;AA5BWP,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAe,SAAff,eAAe;EAAAgB,YAFd;AAAM","names":["ClientesService","constructor","http","getClients","get","apiURL","getClient","id_client","setClient","client","post","updateClient","put","deleteClient","delete","factory","providedIn"],"sourceRoot":"","sources":["/media/luis/Nuevo vol/systems vs code/test/client/src/app/administrador/content/administracion/clientes/service/clientes.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { client,alert } from 'src/app/interfaces/interfaces';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientesService {\n\n  private apiURL = 'http://localhost:3000/clients';\n  constructor(private http: HttpClient) { }\n\n  //accedo al backend para obtener datos de todas las categorias\n  public getClients(): Observable<client[]> {\n    return this.http.get<client[]>(this.apiURL);\n  }\n\n  //accedo al backend para obtener datos de la categoria cuyo id se pasa como parametro\n  public getClient(id_client: number): Observable<client[]|alert> {\n    return this.http.get<client[]|alert>(this.apiURL + '/' + id_client);\n  }\n\n  //accedo al backend para crear una nueva categoria\n  public setClient(client: client): Observable<alert> {\n    return this.http.post<alert>(this.apiURL, client)\n  }\n\n  //accedo al backend para actualizar datos de la categoria cuyo id se pasa como parametro\n  public updateClient(id_client: number, client: client): Observable<alert> {\n    return this.http.put<alert>(this.apiURL + '/' + id_client, client)\n  }\n\n   //accedo al backend para eliminar la categoria cuyo id se pasa como parametro\n  public deleteClient(id_client: number): Observable<alert> {\n    return this.http.delete<alert>(this.apiURL + '/' + id_client)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}