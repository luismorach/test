{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { DinamicInput } from 'src/app/utils/DinamicInput';\nlet NuevaVentaComponent = class NuevaVentaComponent extends DinamicInput {\n  constructor(fb, routes, comunicatorSvc, productsSvc, coinsSvc, renderer, clientesSvc) {\n    super();\n    this.fb = fb;\n    this.routes = routes;\n    this.comunicatorSvc = comunicatorSvc;\n    this.productsSvc = productsSvc;\n    this.coinsSvc = coinsSvc;\n    this.renderer = renderer;\n    this.clientesSvc = clientesSvc;\n    this.products = [];\n    this.date = new Date();\n    this.coins = [];\n    this.clientes = [];\n    this.sellProducts = [];\n  }\n  ngOnInit() {\n    let title = [];\n    let ruta;\n    setTimeout(() => {\n      /* Obtengo la ruta actual y la transformo para obtener el titulo del componente*/\n      ruta = this.routes.url.slice(this.routes.url.slice(1).indexOf('/') + 2);\n      title.push(decodeURI(ruta).toUpperCase()); //añado el titulo al array\n      title.push(\"fas fa-cart-plus fa-fw\"); //aañado el icono del titulo al array\n      this.comunicatorSvc.setTitleComponent(title);\n    });\n    this.coinsSvc.getCoins().subscribe({\n      next: res => {\n        this.coins = res;\n        res.forEach(coin => {\n          if (coin.type === 'principal') this.coinSelected = coin;\n        });\n      },\n      complete: () => {\n        this.formNewSell.get('coin')?.setValue(this.coinSelected.symbol);\n      }\n    });\n    this.clientesSvc.getClients().subscribe(clientes => this.clientes = clientes);\n    this.formNewSell = this.fb.group({\n      barcode: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]+$/)]),\n      productQuantity: new FormControl('', [Validators.pattern(/^[0-9]+$/)]),\n      coin: new FormControl(''),\n      date: new FormControl(''),\n      time: new FormControl(''),\n      discount: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]+$/)])\n    });\n  }\n  verificarProductoAñadido(product) {\n    let exist = false;\n    this.products.forEach(producto => {\n      if (producto.name === product.name) {\n        exist = true;\n      } else {\n        exist = false;\n      }\n    });\n    return exist;\n  }\n  addProduct() {\n    let quantity;\n    if (this.formNewSell.get('productQuantity')?.value === '') {\n      quantity = 1;\n    } else {\n      quantity = this.formNewSell.get('productQuantity')?.value;\n    }\n    if (this.formNewSell.get('barcode')?.valid) {\n      this.productsSvc.getProductoByBarcode(this.formNewSell.get('barcode')?.value).subscribe(product => {\n        if (product instanceof Array) {\n          if (!this.verificarProductoAñadido(product[0])) {\n            this.sellProducts.push({\n              id_sell: 0,\n              id_product: product[0].id_product,\n              buy_price: 0,\n              sell_price: 0,\n              discount_product: 0,\n              impuest: 0,\n              quantity_products: quantity,\n              exist_products: 0,\n              quantity_back: 0\n            });\n            this.products.push(product[0]);\n          }\n        } else {\n          this.changeModal(product);\n          this.popUp?.nativeElement.showModal();\n          this.formNewSell.get('barcode')?.setValue('');\n          this.formNewSell.get('productQuantity')?.setValue('');\n        }\n      });\n    }\n  }\n  calcularSubtotal(product, index) {\n    return this.products[index].sell_price * this.sellProducts[index].quantity_products;\n  }\n  calcularTotal() {\n    let total = 0;\n    this.products.forEach((product, index) => {\n      total += this.products[index].sell_price * this.sellProducts[index].quantity_products;\n    });\n    return total;\n  }\n  delete(index) {\n    this.products.splice(index, 1);\n    //this.sellProducts.splice(index, 1)\n  }\n};\n\n__decorate([ViewChild('popup', {\n  static: true\n})], NuevaVentaComponent.prototype, \"popUp\", void 0);\nNuevaVentaComponent = __decorate([Component({\n  selector: 'app-nueva-venta',\n  templateUrl: './nueva-venta.component.html',\n  styleUrls: ['./nueva-venta.component.css']\n})], NuevaVentaComponent);\nexport { NuevaVentaComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","FormControl","Validators","DinamicInput","NuevaVentaComponent","constructor","fb","routes","comunicatorSvc","productsSvc","coinsSvc","renderer","clientesSvc","Date","ngOnInit","title","ruta","setTimeout","url","slice","indexOf","push","decodeURI","toUpperCase","setTitleComponent","getCoins","subscribe","next","res","coins","forEach","coin","type","coinSelected","complete","formNewSell","get","setValue","symbol","getClients","clientes","group","barcode","required","pattern","productQuantity","date","time","discount","verificarProductoAñadido","product","exist","products","producto","name","addProduct","quantity","value","valid","getProductoByBarcode","Array","sellProducts","id_sell","id_product","buy_price","sell_price","discount_product","impuest","quantity_products","exist_products","quantity_back","changeModal","popUp","nativeElement","showModal","calcularSubtotal","index","calcularTotal","total","delete","splice","__decorate","static","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/inventary-system/client/src/app/content/ventas/nueva-venta/nueva-venta.component.ts"],"sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { client, coin, product, register, sell, sell_product } from 'src/app/interfaces/interfaces';\nimport { ComunicatorComponetsService } from 'src/app/services/comunicator/comunicator-componets.service';\nimport { DinamicInput } from 'src/app/utils/DinamicInput';\nimport { ProductosService } from '../../productos/productos-en-almacen/service/productos.service';\nimport { CoinsService } from '../../configuraciones/service/coins.service';\nimport { ClientesService } from '../../administracion/clientes/service/clientes.service';\n\n@Component({\n  selector: 'app-nueva-venta',\n  templateUrl: './nueva-venta.component.html',\n  styleUrls: ['./nueva-venta.component.css']\n})\nexport class NuevaVentaComponent extends DinamicInput{\n\n  formNewSell!: FormGroup;\n  products: product[] = []\n  date = new Date()\n  coins:coin[]=[]\n  clientes:client[]=[]\n  coinSelected!:coin\n  sell!:sell\n  sellProducts:sell_product[]=[]\n  @ViewChild('popup', { static: true }) override popUp?: ElementRef;\n  constructor(private fb: FormBuilder, private routes: Router,\n     private comunicatorSvc: ComunicatorComponetsService,\n     private productsSvc: ProductosService,\n     private coinsSvc:CoinsService,\n     protected override renderer: Renderer2,\n     private clientesSvc:ClientesService) {\n    super();\n  }\n  ngOnInit() {\n    let title: string[] = [];\n    let ruta;\n    setTimeout(() => {\n      /* Obtengo la ruta actual y la transformo para obtener el titulo del componente*/\n      ruta = this.routes.url.slice((this.routes.url.slice(1).indexOf('/')) + 2);\n      title.push(decodeURI(ruta).toUpperCase());//añado el titulo al array\n      title.push(\"fas fa-cart-plus fa-fw\");//aañado el icono del titulo al array\n      this.comunicatorSvc.setTitleComponent(title);\n    });\n    this.coinsSvc.getCoins().subscribe({ \n      next: res => {\n      this.coins = res\n      res.forEach((coin: coin) => {\n        if (coin.type === 'principal')\n          this.coinSelected = coin\n      })\n    },\n    complete:()=>{\n      this.formNewSell.get('coin')?.setValue(this.coinSelected.symbol)\n    }})\n    this.clientesSvc.getClients().subscribe(clientes=>this.clientes=clientes)\n    this.formNewSell = this.fb.group({\n        barcode: new FormControl('',[Validators.required, Validators.pattern(/^[0-9]+$/)]),\n        productQuantity: new FormControl('',[Validators.pattern(/^[0-9]+$/)]),\n        coin:new FormControl(''),\n        date: new FormControl(''),\n        time: new FormControl(''),\n        discount:new FormControl('',[Validators.required, Validators.pattern(/^[0-9]+$/)]),\n      }\n    )\n  }\n  verificarProductoAñadido(product: product) {\n    let exist: boolean = false\n    this.products.forEach((producto: product) => {\n      if (producto.name === product.name) {\n        exist = true\n      } else {\n        exist = false\n      }\n    })\n    return exist\n  }\n\n  addProduct() {\n    let quantity: number\n    if (this.formNewSell.get('productQuantity')?.value === '') {\n      quantity = 1\n    } else {\n      quantity = this.formNewSell.get('productQuantity')?.value\n    }\n\n    if (this.formNewSell.get('barcode')?.valid) {\n      this.productsSvc.getProductoByBarcode(this.formNewSell.get('barcode')?.value).subscribe(\n        product => {\n          if (product instanceof Array) {\n\n            if (!this.verificarProductoAñadido(product[0])) {\n               this.sellProducts.push({\n                id_sell: 0, id_product: product[0].id_product,\n                buy_price: 0, sell_price: 0,discount_product:0,impuest:0, quantity_products: quantity,\n                exist_products: 0, quantity_back: 0\n              }) \n              this.products.push(product[0])\n            }\n          } else {\n            this.changeModal(product)\n            this.popUp?.nativeElement.showModal()\n            this.formNewSell.get('barcode')?.setValue('')\n            this.formNewSell.get('productQuantity')?.setValue('')\n          }\n        })\n    }\n  }\n  calcularSubtotal(product: product, index: number) {\n    return this.products[index].sell_price * this.sellProducts[index].quantity_products\n  }\n  calcularTotal(){\n      let total = 0\n      this.products.forEach((product: product, index: number) => {\n        total += this.products[index].sell_price * this.sellProducts[index].quantity_products\n      });\n      return total\n  }\n  delete(index: number) {\n    this.products.splice(index, 1)\n    //this.sellProducts.splice(index, 1)\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}