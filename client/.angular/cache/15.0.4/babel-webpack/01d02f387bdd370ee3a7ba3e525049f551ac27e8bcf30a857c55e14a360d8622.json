{"ast":null,"code":"export class DinamicTable {\n  constructor(renderer) {\n    this.renderer = renderer;\n    this.numberPages = 0;\n  }\n  deleteChildren() {\n    let nodes = this.pagination?.nativeElement.childNodes;\n    if (nodes.length > 2) {\n      for (let index = 1; index < nodes.length - 1;) {\n        this.renderer.removeChild(this.pagination?.nativeElement, this.pagination?.nativeElement.children[1]);\n      }\n    }\n  }\n  AddDeleteStyles(classOne, classTwo) {\n    this.renderer.removeClass(this.currentPage, classOne);\n    this.renderer.addClass(this.currentPage, classTwo);\n  }\n  changePage(child, form, currentData, allData) {\n    console.log(this.currentPage.value + \"value de la pagina\");\n    this.AddDeleteStyles('selected', 'items');\n    this.currentPage = child;\n    this.AddDeleteStyles('items', 'selected');\n    console.log(this.currentPage.value + \"value de la pagina nuevo\");\n    //this.getInfo(form,currentData,allData);\n  }\n\n  createPages(form, currentData, allData) {\n    console.log(allData.length);\n    this.deleteChildren(); //elimino todas las paginas actuales\n    this.numberPages = Math.trunc((currentData.length - 1) / form.get('numberRows')?.value) + 1;\n    //itero sobre el numero de paginas a crear\n    for (let i = 0; i < this.numberPages; i++) {\n      const child = this.renderer.createElement('li'); //creo la pagina\n      const value = this.renderer.createText((i + 1).toString());\n      this.renderer.setProperty(child, 'value', i);\n      this.renderer.listen(child, 'click', event => {\n        this.changePage(child, form, currentData, allData);\n      });\n      if (i === 0) {\n        this.renderer.addClass(child, 'selected');\n        this.currentPage = child;\n      } else {\n        this.renderer.addClass(child, 'items');\n      }\n      this.renderer.addClass(child, 'dataTables_info'); //\n      this.renderer.addClass(child, 'page-item'); //a√±ado las clases alos elementos\n      this.renderer.addClass(child, 'active'); //\n      this.renderer.appendChild(child, value); //le agrego el texto al elemento\n      this.renderer.insertBefore(this.pagination?.nativeElement, child, this.next?.nativeElement); //inserto el elento en la vista\n      //this.getInfo(form,currentData,allData);\n    }\n  }\n\n  getInfo(form, currentData, allData) {\n    let msj = 'mostrando ';\n    let nodes = this.info?.nativeElement.childNodes;\n    let inicio = Number(this.currentPage.value) * Number(form.get('numberRows')?.value) + 1;\n    let fin = inicio + Number(form.get('numberRows')?.value) - 1;\n    for (let index = 0; index < nodes.length;) {\n      this.renderer.removeChild(this.info?.nativeElement, this.info?.nativeElement.children[0]);\n    }\n    if (currentData.length < fin) {\n      if (form.get(\"search\")?.value !== '' && form.get(\"search\")?.value !== null) {\n        msj = msj.concat('del ', String(inicio), ' al ', String(currentData.length), \" de \", String(currentData.length), \" entradas \", \" (filtradas de \", String(allData.length), \" en total)\");\n      } else {\n        msj = msj.concat('del ', String(inicio), ' al ', String(allData.length), \" de \", String(allData.length), \" entradas\");\n      }\n    } else {\n      if (form.get(\"search\")?.value !== '' && form.get(\"search\")?.value !== null) {\n        msj = msj.concat('del ', String(inicio), ' al ', String(fin), ' de ', String(currentData.length), \" entradas\", \" (filtradas de \", String(allData.length), \" en total)\");\n      } else {\n        msj = msj.concat('del ', String(inicio), ' al ', String(fin), ' de ', String(allData.length), \" entradas\");\n      }\n    }\n    const child = this.renderer.createElement('p');\n    const text = this.renderer.createText(msj);\n    this.renderer.appendChild(child, text);\n    this.renderer.addClass(child, 'dataTables_info');\n    this.renderer.appendChild(this.info?.nativeElement, child);\n  }\n  getValuesToPipe(form) {\n    let argsPipe = {\n      search: form.get('search')?.value,\n      indexCurrentPage: this.currentPage === undefined ? 0 : Number(this.currentPage.value),\n      numberRows: Number(form.get('numberRows')?.value)\n    };\n    return argsPipe;\n  }\n  nextPage(form, currentData, allData) {\n    let nodes = this.pagination?.nativeElement.children;\n    console.log(\"pagina actuial\" + this.currentPage.value);\n    this.changePage(nodes[Number(this.currentPage.value) + 2], form, currentData, allData);\n  }\n  previousPage(form, currentData, allData) {\n    let nodes = this.pagination?.nativeElement.children;\n    this.changePage(nodes[Number(this.currentPage.value)], form, currentData, allData);\n  }\n}","map":{"version":3,"mappings":"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","names":["DinamicTable","constructor","renderer","deleteChildren","nodes","pagination","nativeElement","childNodes","length","index","removeChild","children","AddDeleteStyles","classOne","classTwo","removeClass","currentPage","addClass","changePage","child","form","currentData","allData","console","log","value","createPages","numberPages","Math","trunc","get","i","createElement","createText","toString","setProperty","listen","event","appendChild","insertBefore","next","getInfo","msj","info","inicio","Number","fin","concat","String","text","getValuesToPipe","argsPipe","search","indexCurrentPage","undefined","numberRows","nextPage","previousPage"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/inventary-system/client/src/app/utils/DinamicTable.ts"],"sourcesContent":["import { ElementRef, Renderer2, ViewChild } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\n\nexport class DinamicTable {\n  numberPages: number = 0;\n  currentPage?: any;\n  protected pagination?:ElementRef|undefined;\n  protected next?:ElementRef|undefined;\n  protected info?:ElementRef|undefined;\n  constructor(protected renderer: Renderer2,) {}\n\n  deleteChildren() {\n    let nodes = this.pagination?.nativeElement.childNodes;\n    if (nodes.length > 2) {\n      for (let index = 1; index < nodes.length - 1;) {\n        this.renderer.removeChild(this.pagination?.nativeElement,\n          this.pagination?.nativeElement.children[1])\n      }\n    }\n  }\n\n  AddDeleteStyles(classOne: string, classTwo: string) {\n    this.renderer.removeClass(this.currentPage, classOne)\n    this.renderer.addClass(this.currentPage, classTwo)\n  }\n  changePage(child: any, form: FormGroup,currentData:any[],allData:any[]) {\n    console.log(this.currentPage.value+\"value de la pagina\")\n    this.AddDeleteStyles('selected', 'items')\n    this.currentPage = child;\n    this.AddDeleteStyles('items', 'selected')\n    console.log(this.currentPage.value+\"value de la pagina nuevo\")\n    //this.getInfo(form,currentData,allData);\n  }\n\n  createPages(form: FormGroup,currentData:any[],allData:any[]) {\n    console.log(allData.length)\n    this.deleteChildren(); //elimino todas las paginas actuales\n    this.numberPages = Math.trunc((currentData.length - 1) /\n      form.get('numberRows')?.value) + 1\n\n    //itero sobre el numero de paginas a crear\n    for (let i = 0; i < this.numberPages; i++) {\n      const child = this.renderer.createElement('li')//creo la pagina\n      const value = this.renderer.createText((i + 1).toString())\n      this.renderer.setProperty(child, 'value', i)\n       this.renderer.listen(child, 'click', (event) => {\n        this.changePage(child, form,currentData,allData);\n      }) \n      if (i === 0) {\n        this.renderer.addClass(child, 'selected')\n        this.currentPage = child;\n      } else {\n        this.renderer.addClass(child, 'items')\n\n      }\n      this.renderer.addClass(child, 'dataTables_info')//\n      this.renderer.addClass(child, 'page-item')//a√±ado las clases alos elementos\n      this.renderer.addClass(child, 'active')//\n      this.renderer.appendChild(child, value)//le agrego el texto al elemento\n      this.renderer.insertBefore(this.pagination?.nativeElement,\n        child, this.next?.nativeElement)//inserto el elento en la vista\n\n      //this.getInfo(form,currentData,allData);\n    }\n\n  }\n\n  getInfo(form: FormGroup,currentData:any[],allData:any[]) {\n    let msj: string = 'mostrando ';\n    let nodes = this.info?.nativeElement.childNodes;\n    let inicio = Number(this.currentPage.value) *\n      Number(form.get('numberRows')?.value) + 1\n    let fin = inicio +\n      Number(form.get('numberRows')?.value) - 1\n    for (let index = 0; index < nodes.length;) {\n      this.renderer.removeChild(this.info?.nativeElement,\n        this.info?.nativeElement.children[0])\n    }\n    if (currentData.length < fin) {\n      if (form.get(\"search\")?.value !== '' &&\n        form.get(\"search\")?.value !== null) {\n        msj = msj.concat('del ', String(inicio),\n          ' al ', String(currentData.length), \" de \",\n          String(currentData.length), \" entradas \",\n          \" (filtradas de \", String(allData.length), \" en total)\")\n      } else {\n        msj = msj.concat('del ', String(inicio),\n          ' al ', String(allData.length), \" de \",\n          String(allData.length), \" entradas\")\n      }\n\n    } else {\n      if (form.get(\"search\")?.value !== ''\n        && form.get(\"search\")?.value !== null) {\n        msj = msj.concat('del ', String(inicio),\n          ' al ', String(fin), ' de ',\n          String(currentData.length), \" entradas\",\n          \" (filtradas de \", String(allData.length), \" en total)\")\n      } else {\n        msj = msj.concat('del ', String(inicio),\n          ' al ', String(fin), ' de ',\n          String(allData.length), \" entradas\")\n      }\n    }\n    const child = this.renderer.createElement('p')\n    const text = this.renderer.createText(msj)\n    this.renderer.appendChild(child, text)\n    this.renderer.addClass(child, 'dataTables_info')\n    this.renderer.appendChild(this.info?.nativeElement, child)\n  }\n\n  getValuesToPipe(form: FormGroup): any {\n    let argsPipe = {\n      search: form.get('search')?.value,\n      indexCurrentPage: (this.currentPage === undefined) ?\n        0 : Number(this.currentPage.value),\n      numberRows: Number(form.get('numberRows')?.value)\n    }\n    return argsPipe;\n  }\n  nextPage(form: FormGroup,currentData:any[],allData:any[]) {\n    let nodes = this.pagination?.nativeElement.children;\n    console.log(\"pagina actuial\"+this.currentPage.value)\n    this.changePage(nodes[Number(this.currentPage.value) + 2], \n      form,currentData,allData);\n  }\n  previousPage(form: FormGroup,currentData:any[],allData:any[]) {\n    let nodes = this.pagination?.nativeElement.children;\n    this.changePage(nodes[Number(this.currentPage.value)],\n     form,currentData,allData);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}