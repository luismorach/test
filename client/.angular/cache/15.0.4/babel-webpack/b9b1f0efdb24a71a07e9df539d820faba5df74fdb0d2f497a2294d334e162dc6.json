{"ast":null,"code":"export class DinamicInput {\n  constructor() {\n    this.elementHasFocus = [];\n    this.positionLabel = [];\n  }\n  isFocused(index, form, label) {\n    this.elementHasFocus[index] = !this.elementHasFocus[index];\n    this.positionLabel[index] = form.get(label)?.value ? false : true;\n  }\n  /*mueve la etiqueta hacia arriba y la letra la vuelve mas pequeña si el  input esta vacio,\n  ademas cambia de color la etiqueta a rojo o verde si la entrada del input es correcta.\n  si el campo no esta vacio solo cambia el color de la etiqueta*/\n  animationLabel(form, input) {\n    const styles = {};\n    if (form.get(input)?.value || input === 'select') {\n      styles[\"top\"] = \"0\";\n      styles[\"font-size\"] = \"1rem\";\n    }\n    if (form.get(input)?.dirty || form.get(input)?.touched) {\n      if (form.get(input)?.errors) {\n        styles[\"color\"] = \"red\";\n      } else {\n        styles[\"color\"] = \"#009688\";\n      }\n      /* } */\n    }\n\n    console.log(form.get(input)?.errors?.['pattern']);\n    return styles;\n  }\n  styleForeground(form, input) {\n    let styles;\n    if (form.get(input)?.dirty || form.get(input)?.touched) {\n      if (form.get(input)?.errors) {\n        styles = {\n          \"color\": \"red\"\n        };\n      }\n    }\n    return styles;\n  }\n  verifyStyleInput(form, input) {\n    let verify = true;\n    if (form.get(input)?.dirty || form.get(input)?.touched) {\n      if (form.get(input)?.errors) {\n        verify = false;\n      } else {\n        verify = true;\n      }\n    }\n    return verify;\n  }\n}","map":{"version":3,"mappings":"AAGA,OAAM,MAAOA,YAAY;EAAzBC;IAEE,oBAAe,GAAc,EAAE;IAC/B,kBAAa,GAAc,EAAE;EAuD/B;EArDEC,SAAS,CAACC,KAAa,EAAEC,IAAe,EAAEC,KAAa;IACrD,IAAI,CAACC,eAAe,CAACH,KAAK,CAAC,GAAG,CAAC,IAAI,CAACG,eAAe,CAACH,KAAK,CAAC;IAC1D,IAAI,CAACI,aAAa,CAACJ,KAAK,CAAC,GAAGC,IAAI,CAACI,GAAG,CAACH,KAAK,CAAC,EAAEI,KAAK,GAC9C,KAAK,GAAG,IAAI;EAElB;EACA;;;EAGAC,cAAc,CAACN,IAAe,EAAEO,KAAa;IAE3C,MAAMC,MAAM,GAAU,EAAM;IAC5B,IAAIR,IAAI,CAACI,GAAG,CAACG,KAAK,CAAC,EAAEF,KAAK,IAAIE,KAAK,KAAK,QAAQ,EAAE;MAChDC,MAAM,CAAC,KAAK,CAAC,GAAE,GAAG;MAClBA,MAAM,CAAC,WAAW,CAAC,GAAE,MAAM;;IAG7B,IAAIR,IAAI,CAACI,GAAG,CAACG,KAAK,CAAC,EAAEE,KAAK,IAAIT,IAAI,CAACI,GAAG,CAACG,KAAK,CAAC,EAAEG,OAAO,EAAE;MACpD,IAAIV,IAAI,CAACI,GAAG,CAACG,KAAK,CAAC,EAAEI,MAAM,EAAE;QAC3BH,MAAM,CAAC,OAAO,CAAC,GAAC,KAAK;OAEtB,MAAM;QACLA,MAAM,CAAC,OAAO,CAAC,GAAE,SAAS;;MAG9B;;;IAEFI,OAAO,CAACC,GAAG,CAACb,IAAI,CAACI,GAAG,CAACG,KAAK,CAAC,EAAEI,MAAM,GAAG,SAAS,CAAC,CAAC;IACjD,OAAOH,MAAM;EACf;EACAM,eAAe,CAACd,IAAe,EAAEO,KAAa;IAC5C,IAAIC,MAAe;IAEnB,IAAIR,IAAI,CAACI,GAAG,CAACG,KAAK,CAAC,EAAEE,KAAK,IAAIT,IAAI,CAACI,GAAG,CAACG,KAAK,CAAC,EAAEG,OAAO,EAAE;MACtD,IAAIV,IAAI,CAACI,GAAG,CAACG,KAAK,CAAC,EAAEI,MAAM,EAAE;QAC3BH,MAAM,GAAG;UACP,OAAO,EAAE;SACV;;;IAGL,OAAOA,MAAM;EACf;EACAO,gBAAgB,CAACf,IAAe,EAAEO,KAAa;IAC7C,IAAIS,MAAM,GAAS,IAAI;IACvB,IAAIhB,IAAI,CAACI,GAAG,CAACG,KAAK,CAAC,EAAEE,KAAK,IAAIT,IAAI,CAACI,GAAG,CAACG,KAAK,CAAC,EAAEG,OAAO,EAAE;MACtD,IAAIV,IAAI,CAACI,GAAG,CAACG,KAAK,CAAC,EAAEI,MAAM,EAAE;QAC3BK,MAAM,GAAC,KAAK;OACb,MAAI;QACHA,MAAM,GAAC,IAAI;;;IAGf,OAAOA,MAAM;EACf","names":["DinamicInput","constructor","isFocused","index","form","label","elementHasFocus","positionLabel","get","value","animationLabel","input","styles","dirty","touched","errors","console","log","styleForeground","verifyStyleInput","verify"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/app/src/app/utils/DinamicInput.ts"],"sourcesContent":["import { Type } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\n\nexport class DinamicInput {\n\n  elementHasFocus: boolean[] = [];\n  positionLabel: boolean[] = [];\n\n  isFocused(index: number, form: FormGroup, label: string) {\n    this.elementHasFocus[index] = !this.elementHasFocus[index];\n    this.positionLabel[index] = form.get(label)?.value\n      ? false : true\n\n  }\n  /*mueve la etiqueta hacia arriba y la letra la vuelve mas pequeña si el  input esta vacio,\n  ademas cambia de color la etiqueta a rojo o verde si la entrada del input es correcta. \n  si el campo no esta vacio solo cambia el color de la etiqueta*/\n  animationLabel(form: FormGroup, input: string,) {\n    type property={[key:string]:string}\n    const styles:property={    };\n    if (form.get(input)?.value || input === 'select') {\n      styles[\"top\"]= \"0\";\n      styles[\"font-size\"]= \"1rem\";\n    \n    } \n    if (form.get(input)?.dirty || form.get(input)?.touched) {\n        if (form.get(input)?.errors) {\n          styles[\"color\"]=\"red\"\n          \n        } else {\n          styles[\"color\"]= \"#009688\"\n          \n        }\n      /* } */\n    }\n    console.log(form.get(input)?.errors?.['pattern'])\n    return styles;\n  }\n  styleForeground(form: FormGroup, input: string,) {\n    let styles!: object;\n\n    if (form.get(input)?.dirty || form.get(input)?.touched) {\n      if (form.get(input)?.errors) {\n        styles = {\n          \"color\": \"red\"\n        }\n      } \n    }\n    return styles;\n  }\n  verifyStyleInput(form: FormGroup, input: string){\n    let verify:Boolean=true;\n    if (form.get(input)?.dirty || form.get(input)?.touched) {\n      if (form.get(input)?.errors) {\n        verify=false;\n      }else{\n        verify=true;\n      } \n    }\n    return verify;\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}