{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ComunicatorComponetsService {\n  constructor() {\n    this.listData$ = new BehaviorSubject([]);\n    this.state$ = new BehaviorSubject(true);\n    this.titleComponent$ = new BehaviorSubject([]);\n  }\n  setshowHideNavBar(state) {\n    this.state$.next(state);\n  }\n  getShowHideNavBar() {\n    return this.state$.asObservable();\n  }\n  setTitleComponent(title) {\n    this.titleComponent$.next(title);\n  }\n  getTitleComponent() {\n    return this.titleComponent$.asObservable();\n  }\n  setData(data) {\n    this.listData$.next(data);\n  }\n  getData() {\n    return this.listData$.asObservable();\n  }\n  errorServer(error) {\n    let content;\n    if (error.error instanceof Error) {\n      content = 'Error cliente o red:' + error.error.message;\n    } else {\n      content = 'Error en el servidor remoto:' + error.message;\n    }\n    let values = {\n      icon: 'fa-regular fa-circle-xmark',\n      title: 'Ocurrió un error inesperado',\n      content: content\n    };\n    return values;\n  }\n  converterToMainCoin(value, exchange) {\n    return Number((value * exchange).toFixed(2));\n  }\n  converterToSecondaryCoin(value, exchange) {\n    return Number((value / exchange).toFixed(2));\n  }\n  converter(value, coin) {\n    let valueConverted = 0;\n    if (coin != undefined) {\n      if (coin.type === 'principal') {\n        valueConverted = Number((value * coin.exchange).toFixed(2));\n      } else {\n        valueConverted = Number((value / coin.exchange).toFixed(2));\n      }\n    }\n    return valueConverted;\n  }\n  currencyFormatter(value) {\n    const formatter = new Intl.NumberFormat('es-VE', {\n      style: 'currency',\n      minimumFractionDigits: 2,\n      currency: 'VES'\n    });\n    return formatter.format(value);\n  }\n}\nComunicatorComponetsService.ɵfac = function ComunicatorComponetsService_Factory(t) {\n  return new (t || ComunicatorComponetsService)();\n};\nComunicatorComponetsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ComunicatorComponetsService,\n  factory: ComunicatorComponetsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAA6B,MAAM;;AAM3D,OAAM,MAAOC,2BAA2B;EAKtCC;IAJQ,cAAS,GAA2B,IAAIF,eAAe,CAAQ,EAAE,CAAC;IAClE,WAAM,GAA6B,IAAIA,eAAe,CAAU,IAAI,CAAC;IACrE,oBAAe,GAA8B,IAAIA,eAAe,CAAW,EAAE,CAAC;EAEtE;EAETG,iBAAiB,CAACC,KAAc;IACrC,IAAI,CAACC,MAAM,CAACC,IAAI,CAACF,KAAK,CAAC;EACzB;EAEOG,iBAAiB;IACtB,OAAO,IAAI,CAACF,MAAM,CAACG,YAAY,EAAE;EACnC;EAEOC,iBAAiB,CAACC,KAAU;IACjC,IAAI,CAACC,eAAe,CAACL,IAAI,CAACI,KAAK,CAAC;EAClC;EACOE,iBAAiB;IACtB,OAAO,IAAI,CAACD,eAAe,CAACH,YAAY,EAAE;EAC5C;EAEOK,OAAO,CAACC,IAAS;IACtB,IAAI,CAACC,SAAS,CAACT,IAAI,CAACQ,IAAI,CAAC;EAC3B;EACOE,OAAO;IACZ,OAAO,IAAI,CAACD,SAAS,CAACP,YAAY,EAAE;EACtC;EACOS,WAAW,CAACC,KAAwB;IACzC,IAAIC,OAAe;IACnB,IAAID,KAAK,CAACA,KAAK,YAAYE,KAAK,EAAE;MAChCD,OAAO,GAAG,sBAAsB,GAAGD,KAAK,CAACA,KAAK,CAACG,OAAO;KACvD,MAAM;MACLF,OAAO,GAAG,8BAA8B,GAAGD,KAAK,CAACG,OAAO;;IAE1D,IAAIC,MAAM,GAAG;MACXC,IAAI,EAAE,4BAA4B;MAClCb,KAAK,EAAE,6BAA6B;MACpCS,OAAO,EAAEA;KACV;IAED,OAAOG,MAAM;EACf;EACAE,mBAAmB,CAACC,KAAa,EAAEC,QAAgB;IACjD,OAAOC,MAAM,CAAC,CAACF,KAAK,GAAGC,QAAQ,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAC;EAC9C;EACAC,wBAAwB,CAACJ,KAAa,EAAEC,QAAgB;IACtD,OAAOC,MAAM,CAAC,CAACF,KAAK,GAAGC,QAAQ,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAC;EAC9C;EACAE,SAAS,CAACL,KAAa,EAAEM,IAAU;IACjC,IAAIC,cAAc,GAAG,CAAC;IACtB,IAAID,IAAI,IAAIE,SAAS,EAAE;MACrB,IAAIF,IAAI,CAACG,IAAI,KAAK,WAAW,EAAE;QAC7BF,cAAc,GAAGL,MAAM,CAAC,CAACF,KAAK,GAAGM,IAAI,CAACL,QAAQ,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAC;OAC5D,MAAM;QACLI,cAAc,GAAGL,MAAM,CAAC,CAACF,KAAK,GAAGM,IAAI,CAACL,QAAQ,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAC;;;IAG/D,OAAOI,cAAc;EACvB;EAEAG,iBAAiB,CAACV,KAAa;IAC7B,MAAMW,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;MAC/CC,KAAK,EAAE,UAAU;MACjBC,qBAAqB,EAAE,CAAC;MACxBC,QAAQ,EAAE;KACX,CAAC;IACF,OAAOL,SAAS,CAACM,MAAM,CAACjB,KAAK,CAAC;EAChC;;AApEWxB,2BAA2B;mBAA3BA,2BAA2B;AAAA;AAA3BA,2BAA2B;SAA3BA,2BAA2B;EAAA0C,SAA3B1C,2BAA2B;EAAA2C,YAF1B;AAAM","names":["BehaviorSubject","ComunicatorComponetsService","constructor","setshowHideNavBar","state","state$","next","getShowHideNavBar","asObservable","setTitleComponent","title","titleComponent$","getTitleComponent","setData","data","listData$","getData","errorServer","error","content","Error","message","values","icon","converterToMainCoin","value","exchange","Number","toFixed","converterToSecondaryCoin","converter","coin","valueConverted","undefined","type","currencyFormatter","formatter","Intl","NumberFormat","style","minimumFractionDigits","currency","format","factory","providedIn"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/inventary-system/client/src/app/services/comunicator/comunicator-componets.service.ts"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { coin } from 'src/app/interfaces/interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComunicatorComponetsService {\n  private listData$: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\n  private state$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n  private titleComponent$: BehaviorSubject<string[]> = new BehaviorSubject<string[]>([]);\n\n  constructor() { }\n\n  public setshowHideNavBar(state: boolean) {\n    this.state$.next(state);\n  }\n\n  public getShowHideNavBar(): Observable<boolean> {\n    return this.state$.asObservable();\n  }\n\n  public setTitleComponent(title: any) {\n    this.titleComponent$.next(title);\n  }\n  public getTitleComponent(): Observable<string[]> {\n    return this.titleComponent$.asObservable();\n  }\n\n  public setData(data: any) {\n    this.listData$.next(data)\n  }\n  public getData() {\n    return this.listData$.asObservable();\n  }\n  public errorServer(error: HttpErrorResponse) {\n    let content: string\n    if (error.error instanceof Error) {\n      content = 'Error cliente o red:' + error.error.message\n    } else {\n      content = 'Error en el servidor remoto:' + error.message\n    }\n    let values = {\n      icon: 'fa-regular fa-circle-xmark',\n      title: 'Ocurrió un error inesperado',\n      content: content\n    }\n\n    return values\n  }\n  converterToMainCoin(value: number, exchange: number) {\n    return Number((value * exchange).toFixed(2))\n  }\n  converterToSecondaryCoin(value: number, exchange: number) {\n    return Number((value / exchange).toFixed(2))\n  }\n  converter(value: number, coin: coin) {\n    let valueConverted = 0\n    if (coin != undefined) {\n      if (coin.type === 'principal') {\n        valueConverted = Number((value * coin.exchange).toFixed(2))\n      } else {\n        valueConverted = Number((value / coin.exchange).toFixed(2))\n      }\n    }\n    return valueConverted\n  }\n\n  currencyFormatter(value: number) {\n    const formatter = new Intl.NumberFormat('es-VE', {\n      style: 'currency',\n      minimumFractionDigits: 2,\n      currency: 'VES',\n    })\n    return formatter.format(value)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}