{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { DinamicInput } from 'src/app/utils/DinamicInput';\nlet BuscarComprasComponent = class BuscarComprasComponent extends DinamicInput {\n  constructor(fb, comunicatorSvc, routes) {\n    super();\n    this.fb = fb;\n    this.comunicatorSvc = comunicatorSvc;\n    this.routes = routes;\n  }\n  ngOnInit() {\n    let title = [];\n    let ruta;\n    setTimeout(() => {\n      /* Obtengo la ruta actual y la transformo para obtener el titulo del componente*/\n      ruta = this.routes.url.slice(this.routes.url.slice(1).indexOf('/') + 2);\n      title.push(decodeURI(ruta).toUpperCase()); //a単ado el titulo al array\n      title.push(\"fas fa-search-dollar fa-fw\"); //aa単ado el icono del titulo al array\n      this.comunicatorSvc.setTitleComponent(title);\n    });\n    this.formSearchBuys = this.fb.group({\n      initialDate: new FormControl('', [Validators.required, Validators.pattern(/^\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$/)]),\n      endDate: new FormControl('', [Validators.required, Validators.pattern(/^\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$/)]),\n      campSearch: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z 0-9]+$/)])\n    });\n  }\n  verificarFechas() {\n    if (this.formSearchBuys.get('initialDate')?.valid && this.formSearchBuys.get('endDate')?.valid && this.formSearchBuys.get('endDate')?.value > this.formSearchBuys.get('initialDate')?.value) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  redirectToComprasRealizadas() {\n    this.routes.navigate(['/compras/compras realizadas'], {\n      queryParams: {\n        inicialDate: this.formSearchBuys.get('initialDate')?.value,\n        endDate: this.formSearchBuys.get('endDate')?.value\n      }\n    });\n  }\n};\nBuscarComprasComponent = __decorate([Component({\n  selector: 'app-buscar-compras',\n  templateUrl: './buscar-compras.component.html',\n  styleUrls: ['./buscar-compras.component.css']\n})], BuscarComprasComponent);\nexport { BuscarComprasComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAsBC,WAAW,EAAaC,UAAU,QAAQ,gBAAgB;AAIhF,SAASC,YAAY,QAAQ,4BAA4B;AAOlD,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAuB,SAAQD,YAAY;EAEtDE,YAAoBC,EAAe,EAAUC,cAA2C,EAC9EC,MAAc;IACtB,KAAK,EAAE;IAFW,OAAE,GAAFF,EAAE;IAAuB,mBAAc,GAAdC,cAAc;IACjD,WAAM,GAANC,MAAM;EAEhB;EACAC,QAAQ;IAEN,IAAIC,KAAK,GAAa,EAAE;IACxB,IAAIC,IAAI;IACRC,UAAU,CAAC,MAAK;MACd;MACAD,IAAI,GAAG,IAAI,CAACH,MAAM,CAACK,GAAG,CAACC,KAAK,CAAE,IAAI,CAACN,MAAM,CAACK,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,CAAC,GAAI,CAAC,CAAC;MACzEL,KAAK,CAACM,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAACO,WAAW,EAAE,CAAC,CAAC;MAC1CR,KAAK,CAACM,IAAI,CAAC,4BAA4B,CAAC,CAAC;MACzC,IAAI,CAACT,cAAc,CAACY,iBAAiB,CAACT,KAAK,CAAC;IAC9C,CAAC,CAAC;IACF,IAAI,CAACU,cAAc,GAAG,IAAI,CAACd,EAAE,CAACe,KAAK,CAAC;MAClCC,WAAW,EAAE,IAAIrB,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACqB,QAAQ,EACrDrB,UAAU,CAACsB,OAAO,CAAC,oDAAoD,CAAC,CAAC,CAAC;MAC1EC,OAAO,EAAE,IAAIxB,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACqB,QAAQ,EACjDrB,UAAU,CAACsB,OAAO,CAAC,oDAAoD,CAAC,CAAC,CAAC;MAC1EE,UAAU,EAAE,IAAIzB,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACqB,QAAQ,EAAErB,UAAU,CAACsB,OAAO,CAAC,iBAAiB,CAAC,CAAC;KAC7F,CAAC;EACJ;EACAG,eAAe;IACb,IAAI,IAAI,CAACP,cAAc,CAACQ,GAAG,CAAC,aAAa,CAAC,EAAEC,KAAK,IACjD,IAAI,CAACT,cAAc,CAACQ,GAAG,CAAC,SAAS,CAAC,EAAEC,KAAK,IACzC,IAAI,CAACT,cAAc,CAACQ,GAAG,CAAC,SAAS,CAAC,EAAEE,KAAK,GAAC,IAAI,CAACV,cAAc,CAACQ,GAAG,CAAC,aAAa,CAAC,EAAEE,KAAK,EAAE;MACvF,OAAO,IAAI;KACZ,MAAI;MACH,OAAO,KAAK;;EAEhB;EACAC,2BAA2B;IACzB,IAAI,CAACvB,MAAM,CAACwB,QAAQ,CAAC,CAAC,6BAA6B,CAAC,EAClD;MACEC,WAAW,EAAE;QACXC,WAAW,EAAE,IAAI,CAACd,cAAc,CAACQ,GAAG,CAAC,aAAa,CAAC,EAAEE,KAAK;QAC1DL,OAAO,EAAE,IAAI,CAACL,cAAc,CAACQ,GAAG,CAAC,SAAS,CAAC,EAAEE;;KAEhD,CAAC;EACN;CAED;AA5CY1B,sBAAsB,eALlCJ,SAAS,CAAC;EACTmC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,GACWjC,sBAAsB,CA4ClC;SA5CYA,sBAAsB","names":["Component","FormControl","Validators","DinamicInput","BuscarComprasComponent","constructor","fb","comunicatorSvc","routes","ngOnInit","title","ruta","setTimeout","url","slice","indexOf","push","decodeURI","toUpperCase","setTitleComponent","formSearchBuys","group","initialDate","required","pattern","endDate","campSearch","verificarFechas","get","valid","value","redirectToComprasRealizadas","navigate","queryParams","inicialDate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/inventary-system/client/src/app/content/compras/buscar-compras/buscar-compras.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ComunicatorComponetsService } from 'src/app/services/comunicator/comunicator-componets.service';\nimport { DinamicInput } from 'src/app/utils/DinamicInput';\n\n@Component({\n  selector: 'app-buscar-compras',\n  templateUrl: './buscar-compras.component.html',\n  styleUrls: ['./buscar-compras.component.css']\n})\nexport class BuscarComprasComponent extends DinamicInput {\n  formSearchBuys!: FormGroup;\n  constructor(private fb: FormBuilder, private comunicatorSvc: ComunicatorComponetsService,\n    private routes: Router) {\n    super();\n  }\n  ngOnInit() {\n\n    let title: string[] = [];\n    let ruta;\n    setTimeout(() => {\n      /* Obtengo la ruta actual y la transformo para obtener el titulo del componente*/\n      ruta = this.routes.url.slice((this.routes.url.slice(1).indexOf('/')) + 2);\n      title.push(decodeURI(ruta).toUpperCase());//a単ado el titulo al array\n      title.push(\"fas fa-search-dollar fa-fw\");//aa単ado el icono del titulo al array\n      this.comunicatorSvc.setTitleComponent(title);\n    })\n    this.formSearchBuys = this.fb.group({\n      initialDate: new FormControl('', [Validators.required,\n      Validators.pattern(/^\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$/)]),\n      endDate: new FormControl('', [Validators.required,\n      Validators.pattern(/^\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$/)]),\n      campSearch: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z 0-9]+$/)])\n    })\n  }\n  verificarFechas() {\n    if (this.formSearchBuys.get('initialDate')?.valid && \n    this.formSearchBuys.get('endDate')?.valid && \n    this.formSearchBuys.get('endDate')?.value>this.formSearchBuys.get('initialDate')?.value) {\n      return true\n    }else{\n      return false\n    }\n  }\n  redirectToComprasRealizadas() {\n    this.routes.navigate(['/compras/compras realizadas'],\n      {\n        queryParams: {\n          inicialDate: this.formSearchBuys.get('initialDate')?.value,\n          endDate: this.formSearchBuys.get('endDate')?.value,\n        }\n      })\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}