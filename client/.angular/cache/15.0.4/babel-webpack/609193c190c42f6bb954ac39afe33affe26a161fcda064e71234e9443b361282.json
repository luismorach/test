{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/comunicator/comunicator-componets.service\";\nexport class TableFilterPipe {\n  constructor(comunicatorSvc) {\n    this.comunicatorSvc = comunicatorSvc;\n  }\n  transform(value, args) {\n    let result = [];\n    for (let newValue of value) {\n      if (args.search === null || args.search === '') {\n        result.push(newValue);\n      } else if (newValue[args.campSearch].indexOf(args.search) > -1) {\n        result.push(newValue);\n      }\n    }\n    if (args.pagination) {\n      this.comunicatorSvc.setData(result);\n      const inicio = args.indexCurrentPage * args.numberRows;\n      const fin = inicio + args.numberRows;\n      result = result.slice(inicio, fin);\n    }\n    return result;\n  }\n}\nTableFilterPipe.ɵfac = function TableFilterPipe_Factory(t) {\n  return new (t || TableFilterPipe)(i0.ɵɵdirectiveInject(i1.ComunicatorComponetsService, 16));\n};\nTableFilterPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"tableFilter\",\n  type: TableFilterPipe,\n  pure: true\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,eAAe;EAC1BC,YAAoBC,cAA2C;IAA3C,mBAAc,GAAdA,cAAc;EAAiC;EAEnEC,SAAS,CAACC,KAAU,EAAEC,IAAS;IAC7B,IAAIC,MAAM,GAAG,EAAE;IACf,KAAK,IAAIC,QAAQ,IAAIH,KAAK,EAAE;MAC1B,IAAIC,IAAI,CAACG,MAAM,KAAK,IAAI,IAAIH,IAAI,CAACG,MAAM,KAAK,EAAE,EAAE;QAC9CF,MAAM,CAACG,IAAI,CAACF,QAAQ,CAAC;OACtB,MAAM,IAAIA,QAAQ,CAACF,IAAI,CAACK,UAAU,CAAC,CAACC,OAAO,CAACN,IAAI,CAACG,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;QAC9DF,MAAM,CAACG,IAAI,CAACF,QAAQ,CAAC;;;IAGzB,IAAIF,IAAI,CAACO,UAAU,EAAE;MACnB,IAAI,CAACV,cAAc,CAACW,OAAO,CAACP,MAAM,CAAC;MACnC,MAAMQ,MAAM,GAAWT,IAAI,CAACU,gBAAgB,GAAGV,IAAI,CAACW,UAAU;MAC9D,MAAMC,GAAG,GAAWH,MAAM,GAAGT,IAAI,CAACW,UAAU;MAC5CV,MAAM,GAAGA,MAAM,CAACY,KAAK,CAACJ,MAAM,EAAEG,GAAG,CAAC;;IAEpC,OAAOX,MAAM;EACf;;AAnBWN,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;;QAAfA,eAAe;EAAAmB;AAAA","names":["TableFilterPipe","constructor","comunicatorSvc","transform","value","args","result","newValue","search","push","campSearch","indexOf","pagination","setData","inicio","indexCurrentPage","numberRows","fin","slice","pure"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/inventary-system/client/src/app/pipes/table-filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { ComunicatorComponetsService } from '../services/comunicator/comunicator-componets.service';\n\n@Pipe({\n  name: 'tableFilter'\n})\nexport class TableFilterPipe implements PipeTransform {\n  constructor(private comunicatorSvc: ComunicatorComponetsService) { }\n\n  transform(value: any, args: any): any {\n    let result = [];\n    for (let newValue of value) {\n      if (args.search === null || args.search === '') {\n        result.push(newValue)\n      } else if (newValue[args.campSearch].indexOf(args.search) > -1) {\n        result.push(newValue)\n      }\n    }\n    if (args.pagination) {\n      this.comunicatorSvc.setData(result);\n      const inicio: number = args.indexCurrentPage * args.numberRows;\n      const fin: number = inicio + args.numberRows;\n      result = result.slice(inicio, fin);\n    }\n    return result\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}