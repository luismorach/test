{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { DinamicTable } from 'src/app/utils/DinamicTable';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/comunicator/comunicator-componets.service\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = [\"pagination\"];\nconst _c1 = [\"next\"];\nconst _c2 = [\"dataTables_info\"];\nconst _c3 = [\"rows\"];\nfunction ListaCajasComponent_tr_39_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 26);\n    i0.ɵɵlistener(\"click\", function ListaCajasComponent_tr_39_Template_td_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const data_r5 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.update(data_r5));\n    });\n    i0.ɵɵelement(8, \"i\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 26);\n    i0.ɵɵlistener(\"click\", function ListaCajasComponent_tr_39_Template_td_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const data_r5 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.delete(data_r5));\n    });\n    i0.ɵɵelement(10, \"i\", 28);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const data_r5 = ctx.$implicit;\n    const i_r6 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r6 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r5.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r5.state);\n  }\n}\nexport class ListaCajasComponent extends DinamicTable {\n  constructor(fb, renderer, comunicatorSvc$, routes) {\n    super(renderer);\n    this.fb = fb;\n    this.renderer = renderer;\n    this.comunicatorSvc$ = comunicatorSvc$;\n    this.routes = routes;\n    this.registers = [];\n    this.currentData = [];\n    this.title = [];\n  }\n  ngOnInit() {\n    setTimeout(() => {\n      //Obtengo la ruta actual y la transformo para obtener el titulo del componente\n      let ruta = this.routes.url.slice(this.routes.url.slice(1).indexOf('/') + 2);\n      //Añado el titulo al array\n      this.title.push(decodeURI(ruta).toUpperCase());\n      //Añado el icono del titulo al array\n      this.title.push(\"fas fa-clipboard-list fa-fw\");\n      //Añado el array al observer para que otros componentes se enteren del contenido\n      this.comunicatorSvc$.setTitleComponent(this.title);\n    });\n    //Me suscribo al observer para obtener toda la lista de cajas en mi base de datos\n    this.data$ = this.comunicatorSvc$.getRegisters().subscribe({\n      next: res => {\n        this.currentData = res;\n        this.registers = res;\n      },\n      error: error => console.log(\"error\" + error),\n      complete: () => {\n        //inserto la cantidad de paginas al DOM segun la cantidad de datos que tengo\n        this.createPages(this.tableSearch, this.currentData, this.registers);\n        //Me suscribo al observer para obtener la lista de cajas actuales\n        //Si se filtran los datos, me devolvera las cajas filtradas\n        //si no, me devolvera todas las cajas\n        this.comunicatorSvc$.getData().subscribe(res => this.currentData = res);\n      }\n    });\n    this.tableSearch = new FormGroup({\n      search: new FormControl(),\n      numberRows: new FormControl('10')\n    });\n  }\n  update(data) {\n    this.comunicatorSvc$.setTargetToUpdate(data);\n    this.routes.navigate(['/administracion/actualizar caja/:' + data.id_register]);\n    console.log(\"updating\" + data.name);\n  }\n  delete(data) {\n    //Obtengo el indice del elemento que voy a eliminar\n    let index = this.registers.indexOf(data);\n    //elimino el elemento de mi lista de cajas totales\n    this.registers.splice(index, 1);\n    //elimino el elemento de mi lista de cajas actuales\n    this.currentData.splice(index, 1);\n    //elimino la fila de mi tabla en la vista\n    this.renderer.removeChild(this.row?.nativeElement, this.row?.nativeElement.children[index]);\n    //elimino la caja de mi base de datos\n    this.comunicatorSvc$.deleteRegister(data.id_register).subscribe();\n    //renderizo la paginacion una vez mas, para que se actualice\n    this.createPages(this.tableSearch, this.currentData, this.registers);\n    console.log(\"deleting\");\n  }\n  ngOnDestroy() {\n    this.data$.unsubscribe();\n  }\n}\nListaCajasComponent.ɵfac = function ListaCajasComponent_Factory(t) {\n  return new (t || ListaCajasComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2.ComunicatorComponetsService), i0.ɵɵdirectiveInject(i3.Router));\n};\nListaCajasComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListaCajasComponent,\n  selectors: [[\"app-lista-cajas\"]],\n  viewQuery: function ListaCajasComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n      i0.ɵɵviewQuery(_c3, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.pagination = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.next = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.info = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.row = _t.first);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 52,\n  vars: 11,\n  consts: [[1, \"table-container\"], [1, \"table-title\"], [1, \"table-body\"], [1, \"search-pagination\", 3, \"formGroup\"], [1, \"dataTable-length\"], [\"name\", \"dataTable_length\", \"formControlName\", \"numberRows\", 1, \"custom-select\", 3, \"change\"], [\"value\", \"2\"], [\"value\", \"10\"], [\"value\", \"25\"], [\"value\", \"50\"], [\"value\", \"100\"], [1, \"dataTable-filter\"], [\"formControlName\", \"search\", 1, \"input-search\", \"dataTable-filter\", 3, \"keyup\"], [1, \"table-responsive\"], [1, \"table\", \"table-bordered\"], [\"rows\", \"\"], [4, \"ngFor\", \"ngForOf\"], [1, \"search-pagination\"], [1, \"dataTables_info\"], [\"dataTables_info\", \"\"], [1, \"pagination-responsive\"], [1, \"pagination\"], [\"pagination\", \"\"], [1, \"previous\", \"page-item\", \"dataTables_info\", \"items\", 3, \"click\"], [1, \"next\", \"dataTables_info\", \"active\", \"items\", 3, \"click\"], [\"next\", \"\"], [1, \"icon\", 3, \"click\"], [1, \"fa\", \"fa-arrows-rotate\", \"update\"], [1, \"fa\", \"fa-trash-can\", \"delete\"]],\n  template: function ListaCajasComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h6\");\n      i0.ɵɵtext(3, \"Cajas Registradas\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"label\");\n      i0.ɵɵtext(8, \"Mostrar \");\n      i0.ɵɵelementStart(9, \"select\", 5);\n      i0.ɵɵlistener(\"change\", function ListaCajasComponent_Template_select_change_9_listener() {\n        return ctx.createPages(ctx.tableSearch, ctx.currentData, ctx.registers);\n      });\n      i0.ɵɵelementStart(10, \"option\", 6);\n      i0.ɵɵtext(11, \"2\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"option\", 7);\n      i0.ɵɵtext(13, \"10\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"option\", 8);\n      i0.ɵɵtext(15, \"25\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"option\", 9);\n      i0.ɵɵtext(17, \"50\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"option\", 10);\n      i0.ɵɵtext(19, \"100\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(20, \" entradas\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 11)(22, \"label\");\n      i0.ɵɵtext(23, \"Buscar: \");\n      i0.ɵɵelementStart(24, \"input\", 12);\n      i0.ɵɵlistener(\"keyup\", function ListaCajasComponent_Template_input_keyup_24_listener() {\n        return ctx.createPages(ctx.tableSearch, ctx.currentData, ctx.registers);\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(25, \"div\", 13)(26, \"table\", 14)(27, \"thead\")(28, \"tr\")(29, \"th\");\n      i0.ɵɵtext(30, \"N\\u00B0\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"th\");\n      i0.ɵɵtext(32, \"Nombre de la caja\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"th\");\n      i0.ɵɵtext(34, \"Estado\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(35, \"th\")(36, \"th\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"tbody\", null, 15);\n      i0.ɵɵtemplate(39, ListaCajasComponent_tr_39_Template, 11, 3, \"tr\", 16);\n      i0.ɵɵpipe(40, \"tableFilter\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(41, \"div\", 17);\n      i0.ɵɵelement(42, \"div\", 18, 19);\n      i0.ɵɵelementStart(44, \"div\", 20)(45, \"ul\", 21, 22)(47, \"li\", 23);\n      i0.ɵɵlistener(\"click\", function ListaCajasComponent_Template_li_click_47_listener() {\n        return ctx.previousPage(ctx.tableSearch, ctx.currentData, ctx.registers);\n      });\n      i0.ɵɵtext(48, \" Previous \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"li\", 24, 25);\n      i0.ɵɵlistener(\"click\", function ListaCajasComponent_Template_li_click_49_listener() {\n        return ctx.nextPage(ctx.tableSearch, ctx.currentData, ctx.registers);\n      });\n      i0.ɵɵtext(51, \" Next \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.tableSearch);\n      i0.ɵɵadvance(34);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(40, 8, ctx.registers, ctx.getValuesToPipe(ctx.tableSearch)));\n      i0.ɵɵadvance(8);\n      i0.ɵɵclassProp(\"disable\", ctx.getValuesToPipe(ctx.tableSearch).indexCurrentPage === 0)(\"active\", ctx.getValuesToPipe(ctx.tableSearch).indexCurrentPage != 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"disable\", ctx.getValuesToPipe(ctx.tableSearch).indexCurrentPage === ctx.numberPages - 1);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","DinamicTable","i0","ListaCajasComponent","constructor","fb","renderer","comunicatorSvc$","routes","ngOnInit","setTimeout","ruta","url","slice","indexOf","title","push","decodeURI","toUpperCase","setTitleComponent","data$","getRegisters","subscribe","next","res","currentData","registers","error","console","log","complete","createPages","tableSearch","getData","search","numberRows","update","data","setTargetToUpdate","navigate","id_register","name","delete","index","splice","removeChild","row","nativeElement","children","deleteRegister","ngOnDestroy","unsubscribe","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/inventary-system/client/src/app/content/administracion/cajas/lista-cajas/lista-cajas.component.ts","/home/luis/Documentos/systems vs code/inventary-system/client/src/app/content/administracion/cajas/lista-cajas/lista-cajas.component.html"],"sourcesContent":["import { Component, ElementRef, Renderer2, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable, Subscription, filter, observable, tap } from 'rxjs';\nimport { TableFilterPipe } from 'src/app/pipes/table-filter.pipe';\nimport { ComunicatorComponetsService } from 'src/app/services/comunicator/comunicator-componets.service';\nimport { DinamicTable } from 'src/app/utils/DinamicTable';\n\n@Component({\n  selector: 'app-lista-cajas',\n  templateUrl: './lista-cajas.component.html'\n})\nexport class ListaCajasComponent extends DinamicTable {\n\n\n  tableSearch!: FormGroup;\n  registers: any[] = [];\n  currentData: any[] = [];\n  data$!: Subscription;\n  title: string[] = [];\n\n  //Elemento donde se insertaran los numeros de paginas para la paginacion\n  @ViewChild('pagination', { static: false }) override pagination?: ElementRef;\n  //Elemento antes del cual se comenzaran a insertar las paginas\n  @ViewChild('next', { static: false }) override next?: ElementRef;\n  //Elemento que muestra la informacion acerca de la cantidad de paginas mostradas, y filtradas\n  @ViewChild('dataTables_info', { static: false }) override info?: ElementRef;\n  //Elemento que tiene todas las filas de la tabla de la vista\n  @ViewChild('rows', { static: false }) row?: ElementRef;\n\n  constructor(private fb: FormBuilder, public override renderer: Renderer2,\n    private comunicatorSvc$: ComunicatorComponetsService, private routes: Router) {\n    super(renderer)\n  }\n  ngOnInit() {\n    setTimeout(() => {\n      //Obtengo la ruta actual y la transformo para obtener el titulo del componente\n      let ruta = this.routes.url.slice((this.routes.url.slice(1).indexOf('/')) + 2);\n      //Añado el titulo al array\n      this.title.push(decodeURI(ruta).toUpperCase());\n      //Añado el icono del titulo al array\n      this.title.push(\"fas fa-clipboard-list fa-fw\");\n      //Añado el array al observer para que otros componentes se enteren del contenido\n      this.comunicatorSvc$.setTitleComponent(this.title);\n    });\n    //Me suscribo al observer para obtener toda la lista de cajas en mi base de datos\n    this.data$ = this.comunicatorSvc$.getRegisters().subscribe(\n      {\n        next: res => { this.currentData = res; this.registers = res },\n        error: error => console.log(\"error\" + error),\n        complete: () => {\n          //inserto la cantidad de paginas al DOM segun la cantidad de datos que tengo\n          this.createPages(this.tableSearch, this.currentData, this.registers)\n          //Me suscribo al observer para obtener la lista de cajas actuales\n          //Si se filtran los datos, me devolvera las cajas filtradas\n          //si no, me devolvera todas las cajas\n          this.comunicatorSvc$.getData().subscribe(res => this.currentData = res)\n        }\n      }\n    );\n\n    this.tableSearch = new FormGroup({\n      search: new FormControl(),\n      numberRows: new FormControl('10')\n    });\n  }\n\n  update(data: any) {\n      this.comunicatorSvc$.setTargetToUpdate(data);\n\n    this.routes.navigate(['/administracion/actualizar caja/:'+data.id_register])\n    console.log(\"updating\" + data.name)\n  }\n  delete(data: any) {\n    //Obtengo el indice del elemento que voy a eliminar\n    let index = this.registers.indexOf(data)\n    //elimino el elemento de mi lista de cajas totales\n    this.registers.splice(index, 1)\n    //elimino el elemento de mi lista de cajas actuales\n    this.currentData.splice(index, 1)\n    //elimino la fila de mi tabla en la vista\n    this.renderer.removeChild(this.row?.nativeElement, this.row?.nativeElement.children[index])\n    //elimino la caja de mi base de datos\n    this.comunicatorSvc$.deleteRegister(data.id_register).subscribe()\n    //renderizo la paginacion una vez mas, para que se actualice\n    this.createPages(this.tableSearch, this.currentData, this.registers)\n    console.log(\"deleting\")\n  }\n  ngOnDestroy() {\n    this.data$.unsubscribe();\n  }\n\n}\n\n","<div class=\"table-container\">\n    <div class=\"table-title\">\n        <h6>Cajas Registradas</h6>\n    </div>\n    <div class=\"table-body\">\n        <div class=\"search-pagination\" [formGroup]=\"tableSearch\">\n            <div class=\"dataTable-length\">\n                <label>Mostrar\n                    <select name=\"dataTable_length\" \n                    formControlName=\"numberRows\" \n                    class=\"custom-select\"\n                        (change)=\"createPages(tableSearch,currentData,registers)\">\n                        <option value=\"2\">2</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"25\">25</option>\n                        <option value=\"50\">50</option>\n                        <option value=\"100\">100</option>\n                    </select> entradas</label>\n            </div>\n            <div class=\"dataTable-filter\">\n                <label>Buscar:\n                    <input formControlName=\"search\" \n                    class=\"input-search dataTable-filter\" \n                    (keyup)=\"createPages(tableSearch,currentData,registers)\">\n                </label>\n            </div>\n        </div>\n        <div class=\"table-responsive\">\n            <table class=\"table table-bordered\" >\n                <thead>\n                    <tr>\n                        <th>N°</th>\n                        <th>Nombre de la caja</th>\n                        <th>Estado</th>\n                        <th></th>\n                        <th></th>\n                    </tr>\n                </thead>\n                \n                <tbody #rows>\n                    <tr *ngFor=\"let data of registers| \n                    tableFilter:getValuesToPipe(tableSearch);let i=index\" >\n                        <td>{{i+1}}</td>\n                        <td>{{data.name}}</td>\n                        <td>{{data.state}}</td>\n                        <td class=\"icon\" (click)=\"update(data)\"><i class=\"fa fa-arrows-rotate update\"></i></td>\n                        <td class=\"icon\"(click)=\"delete(data)\"><i class=\"fa fa-trash-can delete\"></i></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"search-pagination\">\n            <div class=\"dataTables_info\" #dataTables_info>\n            </div>\n            <div class=\"pagination-responsive\">\n                <ul class=\"pagination\" #pagination>\n                    <li class=\"previous page-item dataTables_info items\"\n                        [class.disable]=\"getValuesToPipe(tableSearch).indexCurrentPage===0\"\n                        [class.active]=\"getValuesToPipe(tableSearch).indexCurrentPage!=0\" \n                        (click)=\"previousPage(tableSearch,currentData,registers)\">\n                        Previous\n                    </li>\n\n                    <li class=\"next dataTables_info active items\" #next\n                        [class.disable]=\"getValuesToPipe(tableSearch).indexCurrentPage===numberPages-1\" \n                        (click)=\"nextPage(tableSearch,currentData,registers)\">\n                        Next\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}