{"ast":null,"code":"import { Alert } from \"src/app/utils/Alert\";\nexport class DinamicTable extends Alert {\n  constructor(renderer) {\n    super();\n    this.renderer = renderer;\n    this.numberPages = 0;\n    this.indexCurrentPage = 0;\n  }\n  deleteChildren() {\n    let nodes = this.pagination?.nativeElement.childNodes;\n    if (nodes.length > 2) {\n      for (let index = 1; index < nodes.length - 1;) {\n        this.renderer.removeChild(this.pagination?.nativeElement, this.pagination?.nativeElement.children[1]);\n      }\n    }\n  }\n  AddDeleteStyles(classOne, classTwo) {\n    this.renderer.removeClass(this.currentPage, classOne);\n    this.renderer.addClass(this.currentPage, classTwo);\n  }\n  changePage(child, form, currentData, allData) {\n    this.AddDeleteStyles('selected', 'items');\n    this.currentPage = child;\n    this.indexCurrentPage = Number(child.value);\n    this.AddDeleteStyles('items', 'selected');\n    this.getInfo(form, currentData, allData);\n  }\n  createPages(form, currentData, allData) {\n    this.deleteChildren(); //elimino todas las paginas actuales\n    this.numberPages = Math.trunc((currentData.length - 1) / form.get('numberRows')?.value) + 1;\n    //itero sobre el numero de paginas a crear\n    for (let i = 0; i < this.numberPages; i++) {\n      const child = this.renderer.createElement('li'); //creo la pagina\n      const value = this.renderer.createText((i + 1).toString());\n      this.renderer.setProperty(child, 'value', i);\n      this.renderer.listen(child, 'click', event => {\n        this.changePage(child, form, currentData, allData);\n      });\n      if (i === this.indexCurrentPage) {\n        this.renderer.addClass(child, 'selected');\n        this.currentPage = child;\n      } else {\n        this.renderer.addClass(child, 'items');\n      }\n      this.renderer.addClass(child, 'dataTables_info'); //\n      this.renderer.addClass(child, 'page-item'); //a√±ado las clases alos elementos\n      this.renderer.addClass(child, 'active'); //\n      this.renderer.appendChild(child, value); //le agrego el texto al elemento\n      this.renderer.insertBefore(this.pagination?.nativeElement, child, this.next?.nativeElement); //inserto el elento en la vista\n      this.getInfo(form, currentData, allData);\n    }\n  }\n  getInfo(form, currentData, allData) {\n    let msj = 'mostrando ';\n    let nodes = this.info?.nativeElement.childNodes;\n    let inicio = Number(this.currentPage.value) * Number(form.get('numberRows')?.value) + 1;\n    let fin = inicio + Number(form.get('numberRows')?.value) - 1;\n    for (let index = 0; index < nodes.length;) {\n      this.renderer.removeChild(this.info?.nativeElement, this.info?.nativeElement.children[0]);\n    }\n    if (currentData.length < fin) {\n      if (form.get(\"search\")?.value !== '' && form.get(\"search\")?.value !== null) {\n        msj = msj.concat('del ', String(inicio), ' al ', String(currentData.length), \" de \", String(currentData.length), \" entradas \", \" (filtradas de \", String(allData.length), \" en total)\");\n      } else {\n        msj = msj.concat('del ', String(inicio), ' al ', String(allData.length), \" de \", String(allData.length), \" entradas\");\n      }\n    } else {\n      if (form.get(\"search\")?.value !== '' && form.get(\"search\")?.value !== null) {\n        msj = msj.concat('del ', String(inicio), ' al ', String(fin), ' de ', String(currentData.length), \" entradas\", \" (filtradas de \", String(allData.length), \" en total)\");\n      } else {\n        msj = msj.concat('del ', String(inicio), ' al ', String(fin), ' de ', String(allData.length), \" entradas\");\n      }\n    }\n    const child = this.renderer.createElement('p');\n    const text = this.renderer.createText(msj);\n    this.renderer.appendChild(child, text);\n    this.renderer.addClass(child, 'dataTables_info');\n    this.renderer.appendChild(this.info?.nativeElement, child);\n  }\n  getValuesToPipe(form) {\n    let argsPipe = {\n      search: form.get('search')?.value,\n      indexCurrentPage: this.currentPage === undefined ? 0 : Number(this.currentPage.value),\n      numberRows: Number(form.get('numberRows')?.value)\n    };\n    return argsPipe;\n  }\n  nextPage(form, currentData, allData) {\n    let nodes = this.pagination?.nativeElement.children;\n    this.changePage(nodes[Number(this.currentPage.value) + 2], form, currentData, allData);\n  }\n  previousPage(form, currentData, allData) {\n    let nodes = this.pagination?.nativeElement.children;\n    this.changePage(nodes[Number(this.currentPage.value)], form, currentData, allData);\n  }\n}","map":{"version":3,"mappings":"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","names":["Alert","DinamicTable","constructor","renderer","deleteChildren","nodes","pagination","nativeElement","childNodes","length","index","removeChild","children","AddDeleteStyles","classOne","classTwo","removeClass","currentPage","addClass","changePage","child","form","currentData","allData","indexCurrentPage","Number","value","getInfo","createPages","numberPages","Math","trunc","get","i","createElement","createText","toString","setProperty","listen","event","appendChild","insertBefore","next","msj","info","inicio","fin","concat","String","text","getValuesToPipe","argsPipe","search","undefined","numberRows","nextPage","previousPage"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/inventary-system/client/src/app/utils/DinamicTable.ts"],"sourcesContent":["import { ElementRef, Renderer2, ViewChild } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { Alert } from \"src/app/utils/Alert\";\n\nexport class DinamicTable extends Alert {\n  numberPages: number = 0;\n  currentPage?: any;\n  indexCurrentPage:number=0\n  protected pagination?:ElementRef|undefined;\n  protected next?:ElementRef|undefined;\n  protected info?:ElementRef|undefined;\n  constructor(protected override renderer: Renderer2) {\n    super()\n  }\n\n  deleteChildren() {\n    let nodes = this.pagination?.nativeElement.childNodes;\n    if (nodes.length > 2) {\n      for (let index = 1; index < nodes.length - 1;) {\n        this.renderer.removeChild(this.pagination?.nativeElement,\n          this.pagination?.nativeElement.children[1])\n      }\n    }\n  }\n\n  AddDeleteStyles(classOne: string, classTwo: string) {\n    this.renderer.removeClass(this.currentPage, classOne)\n    this.renderer.addClass(this.currentPage, classTwo)\n  }\n  changePage(child: any, form: FormGroup,currentData:any[],allData:any[]) {\n    this.AddDeleteStyles('selected', 'items')\n    this.currentPage = child;\n    this.indexCurrentPage=Number(child.value)\n    this.AddDeleteStyles('items', 'selected')\n    this.getInfo(form,currentData,allData);\n  }\n\n  createPages(form: FormGroup,currentData:any[],allData:any[]) {\n    this.deleteChildren(); //elimino todas las paginas actuales\n    this.numberPages = Math.trunc((currentData.length - 1) /\n      form.get('numberRows')?.value) + 1\n    //itero sobre el numero de paginas a crear\n    for (let i = 0; i < this.numberPages; i++) {\n      const child = this.renderer.createElement('li')//creo la pagina\n      const value = this.renderer.createText((i + 1).toString())\n      this.renderer.setProperty(child, 'value', i)\n       this.renderer.listen(child, 'click', (event) => {\n        this.changePage(child, form,currentData,allData);\n      }) \n      if (i ===this.indexCurrentPage) {\n        this.renderer.addClass(child, 'selected')\n        this.currentPage = child;\n      } else {\n        this.renderer.addClass(child, 'items')\n\n      }\n      this.renderer.addClass(child, 'dataTables_info')//\n      this.renderer.addClass(child, 'page-item')//a√±ado las clases alos elementos\n      this.renderer.addClass(child, 'active')//\n      this.renderer.appendChild(child, value)//le agrego el texto al elemento\n      this.renderer.insertBefore(this.pagination?.nativeElement,\n        child, this.next?.nativeElement)//inserto el elento en la vista\n\n      this.getInfo(form,currentData,allData);\n    }\n\n  }\n\n  getInfo(form: FormGroup,currentData:any[],allData:any[]) {\n    let msj: string = 'mostrando ';\n    let nodes = this.info?.nativeElement.childNodes;\n    let inicio = Number(this.currentPage.value) *\n      Number(form.get('numberRows')?.value) + 1\n    let fin = inicio +\n      Number(form.get('numberRows')?.value) - 1\n    for (let index = 0; index < nodes.length;) {\n      this.renderer.removeChild(this.info?.nativeElement,\n        this.info?.nativeElement.children[0])\n    }\n    if (currentData.length < fin) {\n      if (form.get(\"search\")?.value !== '' &&\n        form.get(\"search\")?.value !== null) {\n        msj = msj.concat('del ', String(inicio),\n          ' al ', String(currentData.length), \" de \",\n          String(currentData.length), \" entradas \",\n          \" (filtradas de \", String(allData.length), \" en total)\")\n      } else {\n        msj = msj.concat('del ', String(inicio),\n          ' al ', String(allData.length), \" de \",\n          String(allData.length), \" entradas\")\n      }\n\n    } else {\n      if (form.get(\"search\")?.value !== ''\n        && form.get(\"search\")?.value !== null) {\n        msj = msj.concat('del ', String(inicio),\n          ' al ', String(fin), ' de ',\n          String(currentData.length), \" entradas\",\n          \" (filtradas de \", String(allData.length), \" en total)\")\n      } else {\n        msj = msj.concat('del ', String(inicio),\n          ' al ', String(fin), ' de ',\n          String(allData.length), \" entradas\")\n      }\n    }\n    const child = this.renderer.createElement('p')\n    const text = this.renderer.createText(msj)\n    this.renderer.appendChild(child, text)\n    this.renderer.addClass(child, 'dataTables_info')\n    this.renderer.appendChild(this.info?.nativeElement, child)\n  }\n\n  getValuesToPipe(form: FormGroup): any {\n    let argsPipe = {\n      search: form.get('search')?.value,\n      indexCurrentPage: (this.currentPage === undefined) ?\n        0 : Number(this.currentPage.value),\n      numberRows: Number(form.get('numberRows')?.value)\n    }\n    return argsPipe;\n  }\n  nextPage(form: FormGroup,currentData:any[],allData:any[]) {\n    let nodes = this.pagination?.nativeElement.children;\n    this.changePage(nodes[Number(this.currentPage.value) + 2], \n      form,currentData,allData);\n  }\n  previousPage(form: FormGroup,currentData:any[],allData:any[]) {\n    let nodes = this.pagination?.nativeElement.children;\n    this.changePage(nodes[Number(this.currentPage.value)],\n     form,currentData,allData);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}