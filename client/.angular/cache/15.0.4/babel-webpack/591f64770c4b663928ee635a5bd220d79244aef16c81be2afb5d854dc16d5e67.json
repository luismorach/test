{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { DinamicInput } from 'src/app/utils/DinamicInput';\nlet NuevaCompraComponent = class NuevaCompraComponent extends DinamicInput {\n  constructor(fb, routes, comunicatorSvc, providersSvc, productsSvc, renderer) {\n    super();\n    this.fb = fb;\n    this.routes = routes;\n    this.comunicatorSvc = comunicatorSvc;\n    this.providersSvc = providersSvc;\n    this.productsSvc = productsSvc;\n    this.renderer = renderer;\n    this.providers = [];\n    this.products = [];\n    this.quantity = [];\n    this.editables = [];\n    this.date = new Date();\n  }\n  ngOnInit() {\n    let title = [];\n    let ruta;\n    setTimeout(() => {\n      /* Obtengo la ruta actual y la transformo para obtener el titulo del componente*/\n      ruta = this.routes.url.slice(this.routes.url.slice(1).indexOf('/') + 2);\n      title.push(decodeURI(ruta).toUpperCase()); //añado el titulo al array\n      title.push(\"fas fa-shopping-bag fa-fw\"); //aañado el icono del titulo al array\n      this.comunicatorSvc.setTitleComponent(title);\n    });\n    setInterval(() => {\n      this.date = new Date();\n    }, 1000);\n    this.providersSvc.getProviders().subscribe(providers => this.providers = providers);\n    this.formNewBuy = this.fb.group({\n      barcode: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]+$/)]),\n      productQuantity: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]+$/)]),\n      quantityEnd: new FormControl(this.quantity[this.quantity.length - 1]),\n      price: new FormControl(),\n      date: new FormControl(new Date()),\n      time: new FormControl('')\n    });\n  }\n  addProduct(barcode, quantity) {\n    if (this.formNewBuy.valid) {\n      this.productsSvc.getProductoByBarcode(this.formNewBuy.get('barcode')?.value).subscribe(product => {\n        if (product instanceof Array) {\n          let exist = false;\n          this.products.forEach(producto => {\n            if (producto.name === product[0].name) {\n              exist = true;\n            } else {\n              exist = false;\n            }\n          });\n          if (!exist) {\n            this.products.push(product[0]);\n            this.quantity.push(quantity);\n            this.editables.push(false);\n          }\n        } else {\n          this.changeModal(product);\n          this.popUp?.nativeElement.showModal();\n          this.formNewBuy.get('barcode')?.setValue('');\n          this.formNewBuy.get('productQuantity')?.setValue('');\n        }\n      });\n    }\n  }\n  changeEditable(index) {\n    this.editables[index] = !this.editables[index];\n    console.log(this.tab?.nativeElement);\n  }\n  delete(index) {\n    this.products.splice(index, 1);\n  }\n  searchProduct() {\n    console.log(this.products);\n  }\n  acept(index) {\n    console.log(this.popUp?.nativeElement.children[1].textContent);\n    if (this.popUp?.nativeElement.children[1].textContent.includes('error')) {\n      this.popUp?.nativeElement.close();\n    } else if (this.popUp?.nativeElement.children[1].textContent.includes('¿Estás seguro?')) {\n      this.delete(index);\n      this.popUp?.nativeElement.close();\n    }\n  }\n};\n__decorate([ViewChild('popup', {\n  static: true\n})], NuevaCompraComponent.prototype, \"popUp\", void 0);\n__decorate([ViewChild('tab', {\n  static: true\n})], NuevaCompraComponent.prototype, \"tab\", void 0);\nNuevaCompraComponent = __decorate([Component({\n  selector: 'app-nueva-compra',\n  templateUrl: './nueva-compra.component.html',\n  styleUrls: ['./nueva-compra.component.css']\n})], NuevaCompraComponent);\nexport { NuevaCompraComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","FormControl","Validators","DinamicInput","NuevaCompraComponent","constructor","fb","routes","comunicatorSvc","providersSvc","productsSvc","renderer","Date","ngOnInit","title","ruta","setTimeout","url","slice","indexOf","push","decodeURI","toUpperCase","setTitleComponent","setInterval","date","getProviders","subscribe","providers","formNewBuy","group","barcode","required","pattern","productQuantity","quantityEnd","quantity","length","price","time","addProduct","valid","getProductoByBarcode","get","value","product","Array","exist","products","forEach","producto","name","editables","changeModal","popUp","nativeElement","showModal","setValue","changeEditable","index","console","log","tab","delete","splice","searchProduct","acept","children","textContent","includes","close","__decorate","static","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/inventary-system/client/src/app/content/compras/nueva-compra/nueva-compra.component.ts"],"sourcesContent":["import { Component, ElementRef, Renderer2, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { product, provider } from 'src/app/interfaces/interfaces';\nimport { ComunicatorComponetsService } from 'src/app/services/comunicator/comunicator-componets.service';\nimport { DinamicInput } from 'src/app/utils/DinamicInput';\nimport { ProveedoresService } from '../../administracion/proveedores/service/proveedores.service';\nimport { ProductosService } from '../../productos/productos-en-almacen/service/productos.service';\n\n@Component({\n  selector: 'app-nueva-compra',\n  templateUrl: './nueva-compra.component.html',\n  styleUrls: ['./nueva-compra.component.css']\n})\nexport class NuevaCompraComponent extends DinamicInput {\n\n  formNewBuy!: FormGroup;\n  providers: provider[] = []\n  products: product[] = []\n  quantity: number[] = []\n  editables: boolean[]=[]\n  date = new Date()\n  @ViewChild('popup', { static: true }) override popUp?: ElementRef;\n  @ViewChild('tab', { static: true }) tab?: ElementRef;\n\n  constructor(private fb: FormBuilder,\n    private routes: Router,\n    private comunicatorSvc: ComunicatorComponetsService,\n    private providersSvc: ProveedoresService,\n    private productsSvc: ProductosService,\n    protected override renderer: Renderer2) {\n    super();\n  }\n\n  ngOnInit() {\n    let title: string[] = [];\n    let ruta;\n    setTimeout(() => {\n      /* Obtengo la ruta actual y la transformo para obtener el titulo del componente*/\n      ruta = this.routes.url.slice((this.routes.url.slice(1).indexOf('/')) + 2);\n      title.push(decodeURI(ruta).toUpperCase());//añado el titulo al array\n      title.push(\"fas fa-shopping-bag fa-fw\");//aañado el icono del titulo al array\n      this.comunicatorSvc.setTitleComponent(title);\n    });\n    setInterval(()=>{\n      this.date=new Date()\n    },1000)\n    this.providersSvc.getProviders().subscribe(\n      providers => this.providers = providers\n    )\n    this.formNewBuy = this.fb.group(\n      {\n        barcode: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]+$/)]),\n        productQuantity: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]+$/)]),\n        quantityEnd: new FormControl(this.quantity[this.quantity.length - 1]),\n        price: new FormControl(),\n        date: new FormControl(new Date),\n        time: new FormControl(''),\n      }\n    )\n  }\n\n  addProduct(barcode: string, quantity: number) {\n    if (this.formNewBuy.valid) {\n      this.productsSvc.getProductoByBarcode(this.formNewBuy.get('barcode')?.value).subscribe(\n        product => {\n          if (product instanceof Array) {\n            let exist: boolean = false\n            this.products.forEach((producto: product) => {\n              if (producto.name === product[0].name) {\n                exist = true\n              } else {\n                exist = false\n              }\n            })\n            if (!exist) {\n              this.products.push(product[0])\n              this.quantity.push(quantity)\n              this.editables.push(false)\n            }\n          } else {\n            this.changeModal(product)\n            this.popUp?.nativeElement.showModal()\n            this.formNewBuy.get('barcode')?.setValue('')\n            this.formNewBuy.get('productQuantity')?.setValue('')\n          }\n        })\n    }\n  }\n  changeEditable(index:number){\n    this.editables[index]=!this.editables[index]\n    console.log(this.tab?.nativeElement)\n  }\n  delete(index: number) {\n    this.products.splice(index, 1)\n  }\n  searchProduct() {\n    console.log(this.products)\n  }\n  acept(index: number) {\n    console.log(this.popUp?.nativeElement.children[1].textContent)\n    if (this.popUp?.nativeElement.children[1].textContent.includes('error')) {\n      this.popUp?.nativeElement.close()\n    } else if (this.popUp?.nativeElement.children[1].textContent.includes('¿Estás seguro?')) {\n      this.delete(index)\n      this.popUp?.nativeElement.close()\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}