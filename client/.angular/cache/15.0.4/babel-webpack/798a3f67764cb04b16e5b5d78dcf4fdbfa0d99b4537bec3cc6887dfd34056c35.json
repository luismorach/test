{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CajasService {\n  constructor(http) {\n    this.http = http;\n    this.apiURL = 'http://localhost:3000/registers';\n  }\n  //accedo al backend para obtener datos de todas las cajas\n  getRegisters() {\n    return this.http.get(this.apiURL);\n  }\n  //accedo al backend para obtener datos de la caja cuyo id se pasa como parametro\n  getRegister(id_register) {\n    return this.http.get(this.apiURL + '/' + id_register);\n  }\n  //accedo al backend para crear una nueva caja\n  setRegister(register) {\n    return this.http.post(this.apiURL, register);\n  }\n  //accedo al backend para actualizar datos de la caja cuyo id se pasa como parametro\n  updateRegister(id_register, register) {\n    return this.http.put(this.apiURL + '/' + id_register, register);\n  }\n  //accedo al backend para eliminar la caja cuyo id se pasa como parametro\n  deleteRegister(id_register) {\n    return this.http.delete(this.apiURL + '/' + id_register);\n  }\n}\nCajasService.ɵfac = function CajasService_Factory(t) {\n  return new (t || CajasService)(i0.ɵɵinject(i1.HttpClient));\n};\nCajasService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CajasService,\n  factory: CajasService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADhB,WAAM,GAAG,iCAAiC;EACV;EAExC;EACOC,YAAY;IACjB,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,IAAI,CAACC,MAAM,CAAC;EAC/C;EAEA;EACOC,WAAW,CAACC,WAAmB;IACpC,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAmB,IAAI,CAACC,MAAM,GAAG,GAAG,GAAGE,WAAW,CAAC;EACzE;EAEA;EACOC,WAAW,CAACC,QAAkB;IACnC,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAQ,IAAI,CAACL,MAAM,EAAEI,QAAQ,CAAC;EACrD;EAEA;EACOE,cAAc,CAACJ,WAAmB,EAAEE,QAAkB;IAC3D,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAQ,IAAI,CAACP,MAAM,GAAG,GAAG,GAAGE,WAAW,EAAEE,QAAQ,CAAC;EACxE;EAEC;EACMI,cAAc,CAACN,WAAmB;IACvC,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAQ,IAAI,CAACT,MAAM,GAAG,GAAG,GAAGE,WAAW,CAAC;EACjE;;AA5BWP,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAe,SAAZf,YAAY;EAAAgB,YAFX;AAAM","names":["CajasService","constructor","http","getRegisters","get","apiURL","getRegister","id_register","setRegister","register","post","updateRegister","put","deleteRegister","delete","factory","providedIn"],"sourceRoot":"","sources":["/media/luis/Nuevo vol/systems vs code/test/client/src/app/administrador/content/administracion/cajas/service/cajas.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { register } from 'src/app/interfaces/interfaces';\nimport { alert } from 'src/app/interfaces/interfaces';\nimport { Observable} from 'rxjs';\nimport { HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CajasService {\n\n  private apiURL = 'http://localhost:3000/registers';\n  constructor(private http: HttpClient) { }\n\n  //accedo al backend para obtener datos de todas las cajas\n  public getRegisters(): Observable<register[]> {\n    return this.http.get<register[]>(this.apiURL);\n  }\n\n  //accedo al backend para obtener datos de la caja cuyo id se pasa como parametro\n  public getRegister(id_register: number): Observable<register[]|alert> {\n    return this.http.get<register[]|alert>(this.apiURL + '/' + id_register);\n  }\n\n  //accedo al backend para crear una nueva caja\n  public setRegister(register: register): Observable<alert> {\n    return this.http.post<alert>(this.apiURL, register)\n  }\n\n  //accedo al backend para actualizar datos de la caja cuyo id se pasa como parametro\n  public updateRegister(id_register: number, register: register): Observable<alert> {\n    return this.http.put<alert>(this.apiURL + '/' + id_register, register)\n  }\n\n   //accedo al backend para eliminar la caja cuyo id se pasa como parametro\n  public deleteRegister(id_register: number): Observable<alert> {\n    return this.http.delete<alert>(this.apiURL + '/' + id_register)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}