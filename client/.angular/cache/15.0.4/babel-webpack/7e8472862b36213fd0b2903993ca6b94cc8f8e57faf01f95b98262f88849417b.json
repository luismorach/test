{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { DinamicTable } from 'src/app/utils/DinamicTable';\nlet ProductosPorVencimientoComponent = class ProductosPorVencimientoComponent extends DinamicTable {\n  constructor(fb, renderer, comunicatorSvc, routes, productosSvc) {\n    super(renderer);\n    this.fb = fb;\n    this.renderer = renderer;\n    this.comunicatorSvc = comunicatorSvc;\n    this.routes = routes;\n    this.productosSvc = productosSvc;\n    this.products = [];\n    this.title = [];\n    this.currentData = [];\n  }\n  ngOnInit() {\n    let title = [];\n    let ruta;\n    setTimeout(() => {\n      /* Obtengo la ruta actual y la transformo para obtener el titulo del componente*/\n      ruta = this.routes.url.slice(this.routes.url.slice(1).indexOf('/') + 2);\n      title.push(\"fas fa-history fa-fw\"); //aa単ado el icono del titulo al array\n      title.push(decodeURI(ruta).toUpperCase()); //a単ado el titulo al array\n      this.comunicatorSvc.setTitleComponent(title);\n    });\n    this.data$ = this.productosSvc.getProductos().subscribe({\n      next: res => {\n        this.currentData = res;\n        this.products = res;\n      },\n      error: error => {\n        this.error(error);\n      },\n      complete: () => {\n        //inserto la cantidad de paginas al DOM segun la cantidad de datos que tengo\n        this.createPages(this.tableSearch, this.currentData, this.products);\n        //Me suscribo al observer para obtener la lista de usuarios actuales\n        //Si se filtran los datos, me devolvera lao usuarios filtradas\n        //si no, me devolvera todas los usuarios\n        this.comunicatorSvc.getData().subscribe(res => this.currentData = res);\n      }\n    });\n    this.tableSearch = new FormGroup({\n      search: new FormControl(),\n      numberRows: new FormControl('10')\n    });\n  }\n  error(error) {\n    this.changeModal(this.comunicatorSvc.errorServer(error));\n    this.popUp?.nativeElement.showModal();\n  }\n  ngOnDestroy() {\n    this.data$.unsubscribe();\n  }\n};\n__decorate([ViewChild('pagination', {\n  static: false\n})], ProductosPorVencimientoComponent.prototype, \"pagination\", void 0);\n__decorate([ViewChild('next', {\n  static: false\n})], ProductosPorVencimientoComponent.prototype, \"next\", void 0);\n__decorate([ViewChild('dataTables_info', {\n  static: false\n})], ProductosPorVencimientoComponent.prototype, \"info\", void 0);\n__decorate([ViewChild('rows', {\n  static: false\n})], ProductosPorVencimientoComponent.prototype, \"row\", void 0);\n__decorate([ViewChild('popup', {\n  static: true\n})], ProductosPorVencimientoComponent.prototype, \"popUp\", void 0);\nProductosPorVencimientoComponent = __decorate([Component({\n  selector: 'app-productos-por-vencimiento',\n  templateUrl: './productos-por-vencimiento.component.html',\n  styleUrls: ['./productos-por-vencimiento.component.css']\n})], ProductosPorVencimientoComponent);\nexport { ProductosPorVencimientoComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","FormControl","FormGroup","DinamicTable","ProductosPorVencimientoComponent","constructor","fb","renderer","comunicatorSvc","routes","productosSvc","ngOnInit","title","ruta","setTimeout","url","slice","indexOf","push","decodeURI","toUpperCase","setTitleComponent","data$","getProductos","subscribe","next","res","currentData","products","error","complete","createPages","tableSearch","getData","search","numberRows","changeModal","errorServer","popUp","nativeElement","showModal","ngOnDestroy","unsubscribe","__decorate","static","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/inventary-system/client/src/app/content/productos/productos-por-vencimiento/productos-por-vencimiento.component.ts"],"sourcesContent":["import { Component, ElementRef, Renderer2, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription, tap } from 'rxjs';\nimport { ComunicatorComponetsService } from 'src/app/services/comunicator/comunicator-componets.service';\nimport { DinamicTable } from 'src/app/utils/DinamicTable';\nimport { ProductosService } from '../productos-en-almacen/service/productos.service';\nimport { product } from 'src/app/interfaces/interfaces';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-productos-por-vencimiento',\n  templateUrl: './productos-por-vencimiento.component.html',\n  styleUrls: ['./productos-por-vencimiento.component.css']\n})\nexport class ProductosPorVencimientoComponent extends DinamicTable{\n  tableSearch!: FormGroup;\n  data$!:Subscription;\n  products: product[] = [];\n  title: string[] = [];\n  currentData: product[] = [];\n  productToDelete!: product;\n  \n  //Elemento donde se insertaran los numeros \n  //de paginas para la paginacion\n  @ViewChild('pagination', { static: false }) override pagination?: ElementRef;\n  //Elemento antes del cual se comenzaran a insertar las paginas\n  @ViewChild('next', { static: false }) override next?: ElementRef;\n  //Elemento que muestra la informacion acerca de la cantidad de paginas mostradas, y filtradas\n  @ViewChild('dataTables_info', { static: false }) override info?: ElementRef;\n  //Elemento que tiene todas las filas de la tabla de la vista\n  @ViewChild('rows', { static: false }) row?: ElementRef;\n  //Elemento modal para mostrar alertas\n  @ViewChild('popup', { static: true }) override popUp?: ElementRef;\n\n  constructor(private fb: FormBuilder,\n    public override renderer: Renderer2,\n    private comunicatorSvc: ComunicatorComponetsService, \n    private routes: Router,\n    private productosSvc: ProductosService) {\n    super(renderer)\n  }\n  ngOnInit() {\n    let title: string[] = [];\n    let ruta;\n    setTimeout(() => {\n      /* Obtengo la ruta actual y la transformo para obtener el titulo del componente*/\n      ruta = this.routes.url.slice((this.routes.url.slice(1).indexOf('/')) + 2);\n      title.push(\"fas fa-history fa-fw\");//aa単ado el icono del titulo al array\n      title.push(decodeURI(ruta).toUpperCase());//a単ado el titulo al array\n      this.comunicatorSvc.setTitleComponent(title);\n    });\n    this.data$ = this.productosSvc.getProductos().subscribe({\n      next: res => { this.currentData = res; this.products = res },\n      error: (error: HttpErrorResponse) => {\n        this.error(error)\n      },\n      complete: () => {\n        //inserto la cantidad de paginas al DOM segun la cantidad de datos que tengo\n        this.createPages(this.tableSearch, this.currentData, this.products)\n        //Me suscribo al observer para obtener la lista de usuarios actuales\n        //Si se filtran los datos, me devolvera lao usuarios filtradas\n        //si no, me devolvera todas los usuarios\n        this.comunicatorSvc.getData().subscribe(res => this.currentData = res)\n      }\n    });\n\n    this.tableSearch = new FormGroup({\n      search: new FormControl(),\n      numberRows: new FormControl('10')\n    });\n  }\n  public error(error: HttpErrorResponse) {\n    this.changeModal(this.comunicatorSvc.errorServer(error))\n    this.popUp?.nativeElement.showModal()\n  }\n  ngOnDestroy(){\n    this.data$.unsubscribe();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}