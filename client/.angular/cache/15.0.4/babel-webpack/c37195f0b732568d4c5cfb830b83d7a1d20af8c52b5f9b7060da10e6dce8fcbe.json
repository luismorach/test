{"ast":null,"code":"import { DinamicTable } from 'src/app/utils/DinamicTable';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/comunicator/comunicator-componets.service\";\nimport * as i3 from \"src/app/content/ventas/service/ventas.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"src/app/content/compras/service/compras.service\";\nfunction DetallesKardexComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\")(2, \"h3\");\n    i0.ɵɵtext(3, \"ENTRADAS\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\")(5, \"strong\");\n    i0.ɵɵtext(6, \"Fecha: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\")(10, \"strong\");\n    i0.ɵɵtext(11, \"N\\u00B0 factura: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p\")(14, \"strong\");\n    i0.ɵɵtext(15, \"Entrada de unidades: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"p\")(18, \"strong\");\n    i0.ɵɵtext(19, \"Costo de unidades: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(8, 4, ctx_r0.buy.time, \"hh:mm:ss aaaa\"), \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.buy.id_buy);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.buy.type);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.buy.type);\n  }\n}\nexport class DetallesKardexComponent extends DinamicTable {\n  constructor(routes, comunicatorSvc, renderer, route, ventasSvc, location, comprasSvc) {\n    super(renderer);\n    this.routes = routes;\n    this.comunicatorSvc = comunicatorSvc;\n    this.renderer = renderer;\n    this.route = route;\n    this.ventasSvc = ventasSvc;\n    this.location = location;\n    this.comprasSvc = comprasSvc;\n    this.title = [];\n  }\n  ngOnInit() {\n    setTimeout(() => {\n      /* Obtengo la ruta actual y la transformo para obtener el titulo del componente*/\n      this.ruta = this.routes.url.slice(this.routes.url.slice(1).indexOf('/') + 2, this.routes.url.lastIndexOf('?'));\n      this.title.push(\"fas fa-coins fa-fw\"); //aañado el icono del titulo al array\n      this.title.push(decodeURI(this.ruta).toUpperCase()); //añado el titulo al array\n      this.comunicatorSvc.setTitleComponent(this.title);\n    });\n    this.route.queryParams.subscribe(params => {\n      this.comprasSvc.getBuy(params['id_buy']).subscribe(res => {\n        if (res instanceof Array) this.buy = res[0];\n      });\n    });\n  }\n  redirectToKardex() {\n    this.location.back();\n  }\n}\nDetallesKardexComponent.ɵfac = function DetallesKardexComponent_Factory(t) {\n  return new (t || DetallesKardexComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ComunicatorComponetsService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i3.VentasService), i0.ɵɵdirectiveInject(i4.Location), i0.ɵɵdirectiveInject(i5.ComprasService));\n};\nDetallesKardexComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DetallesKardexComponent,\n  selectors: [[\"app-detalles-kardex\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 8,\n  vars: 1,\n  consts: [[1, \"form-container\"], [1, \"back\"], [1, \"form-button\", \"btn-save\", 3, \"click\"], [1, \"fas\", \"fa-reply\"], [1, \"form-title\"], [\"class\", \"datos\", 4, \"ngIf\"], [1, \"datos\"]],\n  template: function DetallesKardexComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function DetallesKardexComponent_Template_button_click_2_listener() {\n        return ctx.redirectToVentasRealizadas();\n      });\n      i0.ɵɵelement(3, \"i\", 3);\n      i0.ɵɵtext(4, \" \\u00A0Regresar\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"h3\", 4);\n      i0.ɵɵtext(6, \" \\u00A0Datos de la venta \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, DetallesKardexComponent_div_7_Template, 21, 7, \"div\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.buy !== undefined);\n    }\n  },\n  dependencies: [i4.NgIf, i4.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAMA,SAASA,YAAY,QAAQ,4BAA4B;;;;;;;;;ICErDC,8BAA2C;IAE/BA,wBAAQ;IAAAA,iBAAK;IACjBA,yBAAG;IAAQA,uBAAO;IAAAA,iBAAS;IAACA,YAAiC;;IAAAA,iBAAI;IACjEA,yBAAG;IAAQA,kCAAY;IAAAA,iBAAS;IAAAA,aAAc;IAAAA,iBAAI;IAClDA,0BAAG;IAAQA,sCAAqB;IAAAA,iBAAS;IAAAA,aAAY;IAAAA,iBAAI;IACzDA,0BAAG;IAAQA,oCAAmB;IAAAA,iBAAS;IAAAA,aAAY;IAAAA,iBAAI;;;;IAH3BA,eAAiC;IAAjCA,sFAAiC;IAC7BA,eAAc;IAAdA,uCAAc;IACLA,eAAY;IAAZA,qCAAY;IACdA,eAAY;IAAZA,qCAAY;;;ADA/D,OAAM,MAAOC,uBAAwB,SAAQF,YAAY;EAOvDG,YAAoBC,MAAc,EACxBC,cAA2C,EACnCC,QAAmB,EAC3BC,KAAqB,EACrBC,SAAwB,EACxBC,QAAkB,EAClBC,UAA0B;IAClC,KAAK,CAACJ,QAAQ,CAAC;IAPG,WAAM,GAANF,MAAM;IAChB,mBAAc,GAAdC,cAAc;IACN,aAAQ,GAARC,QAAQ;IAChB,UAAK,GAALC,KAAK;IACL,cAAS,GAATC,SAAS;IACT,aAAQ,GAARC,QAAQ;IACR,eAAU,GAAVC,UAAU;IAPpB,UAAK,GAAa,EAAE;EASpB;EACAC,QAAQ;IACNC,UAAU,CAAC,MAAK;MACd;MACA,IAAI,CAACC,IAAI,GAAG,IAAI,CAACT,MAAM,CAACU,GAAG,CAACC,KAAK,CAAE,IAAI,CAACX,MAAM,CAACU,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,CAAC,GAAI,CAAC,EAAE,IAAI,CAACZ,MAAM,CAACU,GAAG,CAACG,WAAW,CAAC,GAAG,CAAC,CAAC;MAChH,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC,oBAAoB,CAAC,CAAC;MACtC,IAAI,CAACD,KAAK,CAACC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACP,IAAI,CAAC,CAACQ,WAAW,EAAE,CAAC,CAAC;MACpD,IAAI,CAAChB,cAAc,CAACiB,iBAAiB,CAAC,IAAI,CAACJ,KAAK,CAAC;IACnD,CAAC,CAAC;IACF,IAAI,CAACX,KAAK,CAACgB,WAAW,CAACC,SAAS,CAAEC,MAAM,IAAI;MAC1C,IAAI,CAACf,UAAU,CAACgB,MAAM,CAACD,MAAM,CAAC,QAAQ,CAAC,CAAC,CAACD,SAAS,CAACG,GAAG,IAAG;QACvD,IAAGA,GAAG,YAAYC,KAAK,EACrB,IAAI,CAACC,GAAG,GAACF,GAAG,CAAC,CAAC,CAAC;MACnB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EACAG,gBAAgB;IACd,IAAI,CAACrB,QAAQ,CAACsB,IAAI,EAAE;EACtB;;AAjCW7B,uBAAwB;mBAAxBA,uBAAuB;AAAA;AAAvBA,uBAAwB;QAAxBA,uBAAuB;EAAA8B;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCdpCpC,8BAA4B;MAEZA;QAAA,OAASqC,gCAA4B;MAAA,EAAC;MAA8BrC,uBAA4B;MACpGA,+BAAc;MAAAA,iBAAS;MAE/BA,6BAAuB;MACnBA,yCACJ;MAAAA,iBAAK;MACLA,yEAwBM;MACVA,iBAAM;;;MAzBkBA,eAAqB;MAArBA,4CAAqB","names":["DinamicTable","i0","DetallesKardexComponent","constructor","routes","comunicatorSvc","renderer","route","ventasSvc","location","comprasSvc","ngOnInit","setTimeout","ruta","url","slice","indexOf","lastIndexOf","title","push","decodeURI","toUpperCase","setTitleComponent","queryParams","subscribe","params","getBuy","res","Array","buy","redirectToKardex","back","selectors","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/inventary-system/client/src/app/content/kardex/detalles-kardex/detalles-kardex/detalles-kardex.component.ts","/home/luis/Documentos/systems vs code/inventary-system/client/src/app/content/kardex/detalles-kardex/detalles-kardex/detalles-kardex.component.html"],"sourcesContent":["import { Component, Renderer2 } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ComprasService } from 'src/app/content/compras/service/compras.service';\nimport { VentasService } from 'src/app/content/ventas/service/ventas.service';\nimport { buy, buy_product, sell, sell_product } from 'src/app/interfaces/interfaces';\nimport { ComunicatorComponetsService } from 'src/app/services/comunicator/comunicator-componets.service';\nimport { DinamicTable } from 'src/app/utils/DinamicTable';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-detalles-kardex',\n  templateUrl: './detalles-kardex.component.html',\n  styleUrls: ['./detalles-kardex.component.css']\n})\nexport class DetallesKardexComponent extends DinamicTable {\n  buy!: buy\n  buyProduct!: buy_product\n  sell!: sell\n  sellProduct!: sell_product\n  ruta!: string\n  title: string[] = []\n  constructor(private routes: Router,\n    private comunicatorSvc: ComunicatorComponetsService,\n    public override renderer: Renderer2,\n    private route: ActivatedRoute,\n    private ventasSvc: VentasService,\n    private location: Location,\n    private comprasSvc: ComprasService) {\n    super(renderer)\n  }\n  ngOnInit() {\n    setTimeout(() => {\n      /* Obtengo la ruta actual y la transformo para obtener el titulo del componente*/\n      this.ruta = this.routes.url.slice((this.routes.url.slice(1).indexOf('/')) + 2, this.routes.url.lastIndexOf('?'));\n      this.title.push(\"fas fa-coins fa-fw\");//aañado el icono del titulo al array\n      this.title.push(decodeURI(this.ruta).toUpperCase());//añado el titulo al array\n      this.comunicatorSvc.setTitleComponent(this.title);\n    });\n    this.route.queryParams.subscribe((params) => {\n      this.comprasSvc.getBuy(params['id_buy']).subscribe(res => { \n        if(res instanceof Array)\n          this.buy=res[0]\n      })\n    })\n  }\n  redirectToKardex() {\n    this.location.back()\n  }\n}\n","<div class=\"form-container\">\n    <div class=\"back\">\n        <button (click)=\"redirectToVentasRealizadas()\" class=\"form-button btn-save\"><i class=\"fas fa-reply\"></i>\n            &nbsp;Regresar</button>\n    </div>\n    <h3 class=\"form-title\">\n        &nbsp;Datos de la venta\n    </h3>\n    <div class=\"datos\" *ngIf=\"buy!==undefined\">\n        <div>\n            <h3>ENTRADAS</h3>\n            <p><strong>Fecha: </strong> {{buy.time|date:'hh:mm:ss aaaa'}}</p>\n            <p><strong>N° factura: </strong>{{buy.id_buy}}</p>\n            <p><strong>Entrada de unidades: </strong>{{buy.type}}</p>\n            <p><strong>Costo de unidades: </strong>{{buy.type}}</p>\n        </div>\n       <!--  <div>\n            <h3>CAJA Y USUARIO</h3>\n            <p><strong>Caja: </strong>{{register_buy.name}}</p>\n            <p><strong>Vendedor: </strong>{{user_buy.names_user}} {{user_buy.last_names_user}}</p>\n            <p><strong>Cliente: </strong> {{client.names_client}} {{client.last_names_client}}</p>\n        </div> -->\n        <!-- <div>\n            <h3>EXISTENCIAS</h3>\n            <p><strong>Total: </strong>{{buy.total_buy|currency:buy.coin+' '}}</p>\n            <p><strong>Pagado: </strong>{{buy.total_pay|currency:buy.coin+' '}}</p>\n            <p><strong>Estado:</strong> {{buy.state}}</p>\n            <p><strong>Costos de venta:</strong>{{calcularCostosVenta()|currency:buy.coin+' '}}</p>\n            <p><strong>Utilidad (ganancias): </strong>{{buy.total_buy-calcularCostosVenta()|currency:buy.coin+' '}}\n            </p>\n        </div> -->\n\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}