{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { DinamicInput } from 'src/app/utils/DinamicInput';\nlet NuevaCompraComponent = class NuevaCompraComponent extends DinamicInput {\n  constructor(fb, routes, comunicatorSvc, providersSvc, productsSvc) {\n    super();\n    this.fb = fb;\n    this.routes = routes;\n    this.comunicatorSvc = comunicatorSvc;\n    this.providersSvc = providersSvc;\n    this.productsSvc = productsSvc;\n    this.providers = [];\n    this.products = [];\n    this.quantity = [];\n    this.date = new Date();\n  }\n  ngOnInit() {\n    let title = [];\n    let ruta;\n    setTimeout(() => {\n      /* Obtengo la ruta actual y la transformo para obtener el titulo del componente*/\n      ruta = this.routes.url.slice(this.routes.url.slice(1).indexOf('/') + 2);\n      title.push(decodeURI(ruta).toUpperCase()); //a単ado el titulo al array\n      title.push(\"fas fa-shopping-bag fa-fw\"); //aa単ado el icono del titulo al array\n      this.comunicatorSvc.setTitleComponent(title);\n    });\n    this.providersSvc.getProviders().subscribe(providers => this.providers = providers);\n    this.formNewBuy = this.fb.group({\n      barcode: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]+$/)]),\n      productQuantity: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]+$/)]),\n      date: new FormControl(new Date()),\n      time: new FormControl('')\n    });\n  }\n  addProduct(barcode, quantity) {\n    this.productsSvc.getProductoByBarcode(this.formNewBuy.get('barcode')?.value).subscribe(product => {\n      if (product instanceof Array) {\n        console.log(this.products.includes(product[0]));\n        if (!this.products.includes(product[0])) this.products.push(product[0]);\n        this.quantity.push(quantity);\n      }\n    });\n  }\n};\nNuevaCompraComponent = __decorate([Component({\n  selector: 'app-nueva-compra',\n  templateUrl: './nueva-compra.component.html',\n  styleUrls: ['./nueva-compra.component.css']\n})], NuevaCompraComponent);\nexport { NuevaCompraComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAsBC,WAAW,EAAaC,UAAU,QAAQ,gBAAgB;AAIhF,SAASC,YAAY,QAAQ,4BAA4B;AASlD,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAqB,SAAQD,YAAY;EAQpDE,YAAoBC,EAAe,EACzBC,MAAc,EACdC,cAA2C,EAC3CC,YAAgC,EAChCC,WAA6B;IACrC,KAAK,EAAE;IALW,OAAE,GAAFJ,EAAE;IACZ,WAAM,GAANC,MAAM;IACN,mBAAc,GAAdC,cAAc;IACd,iBAAY,GAAZC,YAAY;IACZ,gBAAW,GAAXC,WAAW;IATrB,cAAS,GAAe,EAAE;IAC1B,aAAQ,GAAc,EAAE;IACxB,aAAQ,GAAU,EAAE;IACpB,SAAI,GAAC,IAAIC,IAAI;EAQb;EACAC,QAAQ;IACN,IAAIC,KAAK,GAAa,EAAE;IACxB,IAAIC,IAAI;IACRC,UAAU,CAAC,MAAK;MACd;MACAD,IAAI,GAAG,IAAI,CAACP,MAAM,CAACS,GAAG,CAACC,KAAK,CAAE,IAAI,CAACV,MAAM,CAACS,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,CAAC,GAAI,CAAC,CAAC;MACzEL,KAAK,CAACM,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAACO,WAAW,EAAE,CAAC,CAAC;MAC1CR,KAAK,CAACM,IAAI,CAAC,2BAA2B,CAAC,CAAC;MACxC,IAAI,CAACX,cAAc,CAACc,iBAAiB,CAACT,KAAK,CAAC;IAC9C,CAAC,CAAC;IACF,IAAI,CAACJ,YAAY,CAACc,YAAY,EAAE,CAACC,SAAS,CACxCC,SAAS,IAAI,IAAI,CAACA,SAAS,GAAGA,SAAS,CACxC;IACD,IAAI,CAACC,UAAU,GAAG,IAAI,CAACpB,EAAE,CAACqB,KAAK,CAC7B;MACEC,OAAO,EAAE,IAAI3B,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAAC2B,QAAQ,EAAE3B,UAAU,CAAC4B,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;MACnFC,eAAe,EAAE,IAAI9B,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAAC2B,QAAQ,EAAE3B,UAAU,CAAC4B,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;MAC3FE,IAAI,EAAE,IAAI/B,WAAW,CAAC,IAAIU,IAAI,GAAC;MAC/BsB,IAAI,EAAE,IAAIhC,WAAW,CAAC,EAAE;KACzB,CACF;EACH;EAEAiC,UAAU,CAACN,OAAe,EAACO,QAAe;IACxC,IAAI,CAACzB,WAAW,CAAC0B,oBAAoB,CAAC,IAAI,CAACV,UAAU,CAACW,GAAG,CAAC,SAAS,CAAC,EAAEC,KAAK,CAAC,CAACd,SAAS,CACpFe,OAAO,IAAG;MACR,IAAIA,OAAO,YAAYC,KAAK,EAAE;QAC5BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,QAAQ,CAACC,QAAQ,CAACL,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,IAAI,CAACI,QAAQ,CAACC,QAAQ,CAACL,OAAO,CAAC,CAAC,CAAC,CAAC,EACrC,IAAI,CAACI,QAAQ,CAACxB,IAAI,CAACoB,OAAO,CAAC,CAAC,CAAC,CAAC;QAE9B,IAAI,CAACJ,QAAQ,CAAChB,IAAI,CAACgB,QAAQ,CAAC;;IAGlC,CAAC,CAAC;EACN;CACD;AAnDY/B,oBAAoB,eALhCJ,SAAS,CAAC;EACT6C,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACW3C,oBAAoB,CAmDhC;SAnDYA,oBAAoB","names":["Component","FormControl","Validators","DinamicInput","NuevaCompraComponent","constructor","fb","routes","comunicatorSvc","providersSvc","productsSvc","Date","ngOnInit","title","ruta","setTimeout","url","slice","indexOf","push","decodeURI","toUpperCase","setTitleComponent","getProviders","subscribe","providers","formNewBuy","group","barcode","required","pattern","productQuantity","date","time","addProduct","quantity","getProductoByBarcode","get","value","product","Array","console","log","products","includes","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/inventary-system/client/src/app/content/compras/nueva-compra/nueva-compra.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { product, provider } from 'src/app/interfaces/interfaces';\nimport { ComunicatorComponetsService } from 'src/app/services/comunicator/comunicator-componets.service';\nimport { DinamicInput } from 'src/app/utils/DinamicInput';\nimport { ProveedoresService } from '../../administracion/proveedores/service/proveedores.service';\nimport { ProductosService } from '../../productos/productos-en-almacen/service/productos.service';\n\n@Component({\n  selector: 'app-nueva-compra',\n  templateUrl: './nueva-compra.component.html',\n  styleUrls: ['./nueva-compra.component.css']\n})\nexport class NuevaCompraComponent extends DinamicInput {\n\n  formNewBuy!: FormGroup;\n  providers: provider[] = []\n  products: product[] = []\n  quantity:number[]=[]\n  date=new Date\n\n  constructor(private fb: FormBuilder,\n    private routes: Router,\n    private comunicatorSvc: ComunicatorComponetsService,\n    private providersSvc: ProveedoresService,\n    private productsSvc: ProductosService) {\n    super();\n  }\n  ngOnInit() {\n    let title: string[] = [];\n    let ruta;\n    setTimeout(() => {\n      /* Obtengo la ruta actual y la transformo para obtener el titulo del componente*/\n      ruta = this.routes.url.slice((this.routes.url.slice(1).indexOf('/')) + 2);\n      title.push(decodeURI(ruta).toUpperCase());//a単ado el titulo al array\n      title.push(\"fas fa-shopping-bag fa-fw\");//aa単ado el icono del titulo al array\n      this.comunicatorSvc.setTitleComponent(title);\n    });\n    this.providersSvc.getProviders().subscribe(\n      providers => this.providers = providers\n    )\n    this.formNewBuy = this.fb.group(\n      {\n        barcode: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]+$/)]),\n        productQuantity: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]+$/)]),\n        date: new FormControl(new Date),\n        time: new FormControl(''),\n      }\n    )\n  }\n\n  addProduct(barcode: string,quantity:number) {\n    this.productsSvc.getProductoByBarcode(this.formNewBuy.get('barcode')?.value).subscribe(\n      product => {\n        if (product instanceof Array) {\n          console.log(this.products.includes(product[0]))\n          if (!this.products.includes(product[0]))\n            this.products.push(product[0])\n\n            this.quantity.push(quantity)\n        }\n       \n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}