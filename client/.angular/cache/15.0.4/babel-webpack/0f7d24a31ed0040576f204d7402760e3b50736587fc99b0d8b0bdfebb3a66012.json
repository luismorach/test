{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductosService {\n  constructor(http) {\n    this.http = http;\n    this.apiURL = 'http://localhost:3000/products';\n  }\n  //accedo al backend para obtener datos de todas las cajas\n  getProductos() {\n    return this.http.get(this.apiURL);\n  }\n  getProductosMasVendidos() {\n    return this.http.get(this.apiURL + '/sells');\n  }\n  getProductosPorVencimiento() {\n    return this.http.get(this.apiURL + '/expir');\n  }\n  //accedo al backend para obtener datos de la caja cuyo id se pasa como parametro\n  getProducto(id_product) {\n    return this.http.get(this.apiURL + '/' + id_product);\n  }\n  getProductoByCategory(id_category) {\n    return this.http.get(this.apiURL + '/category/' + id_category);\n  }\n  //accedo al backend para crear una nueva caja\n  setProducto(product) {\n    return this.http.post(this.apiURL, product);\n  }\n  //accedo al backend para actualizar datos de la caja cuyo id se pasa como parametro\n  updateProducto(id_product, product) {\n    return this.http.put(this.apiURL + '/' + id_product, product);\n  }\n  //accedo al backend para eliminar la caja cuyo id se pasa como parametro\n  deleteProducto(id_product) {\n    return this.http.delete(this.apiURL + '/' + id_product);\n  }\n}\nProductosService.ɵfac = function ProductosService_Factory(t) {\n  return new (t || ProductosService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductosService,\n  factory: ProductosService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,gBAAgB;EAG3BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADhB,WAAM,GAAG,gCAAgC;EACT;EAExC;EACOC,YAAY;IACjB,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,IAAI,CAACC,MAAM,CAAC;EAC9C;EACOC,uBAAuB;IAC5B,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAY,IAAI,CAACC,MAAM,GAAC,QAAQ,CAAC;EACvD;EACOE,0BAA0B;IAC/B,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAY,IAAI,CAACC,MAAM,GAAC,QAAQ,CAAC;EACvD;EAEA;EACOG,WAAW,CAACC,UAAkB;IACnC,OAAO,IAAI,CAACP,IAAI,CAACE,GAAG,CAAkB,IAAI,CAACC,MAAM,GAAG,GAAG,GAAGI,UAAU,CAAC;EACvE;EACOC,qBAAqB,CAACC,WAAmB;IAC9C,OAAO,IAAI,CAACT,IAAI,CAACE,GAAG,CAAkB,IAAI,CAACC,MAAM,GAAG,YAAY,GAAGM,WAAW,CAAC;EACjF;EAEA;EACOC,WAAW,CAACC,OAAgB;IACjC,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAQ,IAAI,CAACT,MAAM,EAAEQ,OAAO,CAAC;EACpD;EAEA;EACOE,cAAc,CAACN,UAAkB,EAAEI,OAAgB;IACxD,OAAO,IAAI,CAACX,IAAI,CAACc,GAAG,CAAQ,IAAI,CAACX,MAAM,GAAG,GAAG,GAAGI,UAAU,EAAEI,OAAO,CAAC;EACtE;EAEC;EACMI,cAAc,CAACR,UAAkB;IACtC,OAAO,IAAI,CAACP,IAAI,CAACgB,MAAM,CAAQ,IAAI,CAACb,MAAM,GAAG,GAAG,GAAGI,UAAU,CAAC;EAChE;;AArCWT,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAmB,SAAhBnB,gBAAgB;EAAAoB,YAFf;AAAM","names":["ProductosService","constructor","http","getProductos","get","apiURL","getProductosMasVendidos","getProductosPorVencimiento","getProducto","id_product","getProductoByCategory","id_category","setProducto","product","post","updateProducto","put","deleteProducto","delete","factory","providedIn"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/inventary-system/client/src/app/content/productos/productos-en-almacen/service/productos.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { product,alert } from 'src/app/interfaces/interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductosService {\n\n  private apiURL = 'http://localhost:3000/products';\n  constructor(private http: HttpClient) { }\n\n  //accedo al backend para obtener datos de todas las cajas\n  public getProductos(): Observable<product[]> {\n    return this.http.get<product[]>(this.apiURL);\n  }\n  public getProductosMasVendidos(): Observable<product[]> {\n    return this.http.get<product[]>(this.apiURL+'/sells');\n  }\n  public getProductosPorVencimiento(): Observable<product[]> {\n    return this.http.get<product[]>(this.apiURL+'/expir');\n  }\n\n  //accedo al backend para obtener datos de la caja cuyo id se pasa como parametro\n  public getProducto(id_product: number): Observable<product[]|alert> {\n    return this.http.get<product[]|alert>(this.apiURL + '/' + id_product);\n  }\n  public getProductoByCategory(id_category: number): Observable<product[]|alert> {\n    return this.http.get<product[]|alert>(this.apiURL + '/category/' + id_category);\n  }\n\n  //accedo al backend para crear una nueva caja\n  public setProducto(product: product): Observable<alert> {\n    return this.http.post<alert>(this.apiURL, product)\n  }\n\n  //accedo al backend para actualizar datos de la caja cuyo id se pasa como parametro\n  public updateProducto(id_product: number, product: product): Observable<alert> {\n    return this.http.put<alert>(this.apiURL + '/' + id_product, product)\n  }\n\n   //accedo al backend para eliminar la caja cuyo id se pasa como parametro\n  public deleteProducto(id_product: number): Observable<alert> {\n    return this.http.delete<alert>(this.apiURL + '/' + id_product)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}