{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TableFilterPipe {\n  constructor() {\n    this.result = [];\n  }\n  transform(value, args) {\n    for (let newValue of value) {\n      if (args.search === null || args.search === '') {\n        this.result.push(newValue);\n      } else if (newValue.name.indexOf(args.search) > -1) {\n        this.result.push(newValue);\n      }\n      console.log(this.result);\n    }\n    const inicio = args.indexCurrentPage * args.numberRows;\n    const fin = inicio + args.numberRows;\n    return this.result.slice(inicio, fin);\n  }\n  getResult() {\n    return this.result;\n  }\n}\nTableFilterPipe.ɵfac = function TableFilterPipe_Factory(t) {\n  return new (t || TableFilterPipe)();\n};\nTableFilterPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"tableFilter\",\n  type: TableFilterPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,eAAe;EAH5BC;IAIU,WAAM,GAAO,EAAE;;EACvBC,SAAS,CAACC,KAAU,EAAEC,IAAS;IAE7B,KAAK,IAAIC,QAAQ,IAAIF,KAAK,EAAE;MAC1B,IAAIC,IAAI,CAACE,MAAM,KAAK,IAAI,IAAIF,IAAI,CAACE,MAAM,KAAK,EAAE,EAAE;QAC9C,IAAI,CAACC,MAAM,CAACC,IAAI,CAACH,QAAQ,CAAC;OAC3B,MAAM,IAAIA,QAAQ,CAACI,IAAI,CAACC,OAAO,CAACN,IAAI,CAACE,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;QAClD,IAAI,CAACC,MAAM,CAACC,IAAI,CAACH,QAAQ,CAAC;;MAE5BM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,MAAM,CAAC;;IAE1B,MAAMM,MAAM,GAAWT,IAAI,CAACU,gBAAgB,GAAGV,IAAI,CAACW,UAAU;IAC9D,MAAMC,GAAG,GAAWH,MAAM,GAAGT,IAAI,CAACW,UAAU;IAC5C,OAAO,IAAI,CAACR,MAAM,CAACU,KAAK,CAACJ,MAAM,EAAEG,GAAG,CAAC;EACvC;EACAE,SAAS;IACP,OAAO,IAAI,CAACX,MAAM;EACpB;;AAlBWP,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;;QAAfA,eAAe;EAAAmB;AAAA","names":["TableFilterPipe","constructor","transform","value","args","newValue","search","result","push","name","indexOf","console","log","inicio","indexCurrentPage","numberRows","fin","slice","getResult","pure"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/app/src/app/pipes/table-filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'tableFilter'\n})\nexport class TableFilterPipe implements PipeTransform {\n  private result:any = [];\n  transform(value: any, args: any): any {\n\n    for (let newValue of value) {\n      if (args.search === null || args.search === '') {\n        this.result.push(newValue)\n      } else if (newValue.name.indexOf(args.search) > -1) {\n        this.result.push(newValue)\n      }\n      console.log(this.result);\n    }\n    const inicio: number = args.indexCurrentPage * args.numberRows;\n    const fin: number = inicio + args.numberRows;\n    return this.result.slice(inicio, fin);\n  }\n  getResult(){\n    return this.result;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}