{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TableFilterPipe {\n  transform(value, args) {\n    const result = [];\n    for (let newValue of value) {\n      if (args.search === null || args.search === '') {\n        result.push(newValue);\n      } else if (newValue.name.indexOf(args.search) > -1) {\n        result.push(newValue);\n      }\n    }\n    const inicio = args.indexCurrentPage * args.numberRows;\n    const fin = inicio + args.numberRows;\n    return result.slice(inicio, fin);\n  }\n}\nTableFilterPipe.ɵfac = function TableFilterPipe_Factory(t) {\n  return new (t || TableFilterPipe)();\n};\nTableFilterPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"tableFilter\",\n  type: TableFilterPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,eAAe;EAE1BC,SAAS,CAACC,KAAU,EAAEC,IAAS;IAC7B,MAAMC,MAAM,GAAG,EAAE;IAEjB,KAAK,IAAIC,QAAQ,IAAIH,KAAK,EAAE;MAC1B,IAAIC,IAAI,CAACG,MAAM,KAAK,IAAI,IAAIH,IAAI,CAACG,MAAM,KAAK,EAAE,EAAE;QAC9CF,MAAM,CAACG,IAAI,CAACF,QAAQ,CAAC;OACtB,MAAM,IAAIA,QAAQ,CAACG,IAAI,CAACC,OAAO,CAACN,IAAI,CAACG,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;QAClDF,MAAM,CAACG,IAAI,CAACF,QAAQ,CAAC;;;IAGzB,MAAMK,MAAM,GAAWP,IAAI,CAACQ,gBAAgB,GAAGR,IAAI,CAACS,UAAU;IAC9D,MAAMC,GAAG,GAAWH,MAAM,GAAGP,IAAI,CAACS,UAAU;IAC5C,OAAOR,MAAM,CAACU,KAAK,CAACJ,MAAM,EAAEG,GAAG,CAAC;EAElC;;AAhBWb,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;;QAAfA,eAAe;EAAAe;AAAA","names":["TableFilterPipe","transform","value","args","result","newValue","search","push","name","indexOf","inicio","indexCurrentPage","numberRows","fin","slice","pure"],"sourceRoot":"","sources":["/home/luis/Documentos/systems vs code/app/src/app/pipes/table-filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'tableFilter'\n})\nexport class TableFilterPipe implements PipeTransform {\n\n  transform(value: any, args: any): any {\n    const result = [];\n\n    for (let newValue of value) {\n      if (args.search === null || args.search === '') {\n        result.push(newValue)\n      } else if (newValue.name.indexOf(args.search) > -1) {\n        result.push(newValue)\n      }\n    }\n    const inicio: number = args.indexCurrentPage * args.numberRows;\n    const fin: number = inicio + args.numberRows;\n    return result.slice(inicio, fin);\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}